{
  "_format": "hh-sol-artifact-1",
  "contractName": "IWorldHook",
  "sourceName": "contracts/world/v0.2/IWorldHook.sol",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "sendTokensToAvatarOwner",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "avatarOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "defaultExperience",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "username",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "initData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AvatarRegistrationRequest",
          "name": "req",
          "type": "tuple"
        }
      ],
      "name": "beforeRegisterAvatar",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "initData",
              "type": "bytes"
            }
          ],
          "internalType": "struct CompanyRegistrationArgs",
          "name": "args",
          "type": "tuple"
        }
      ],
      "name": "beforeRegisterCompany",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
