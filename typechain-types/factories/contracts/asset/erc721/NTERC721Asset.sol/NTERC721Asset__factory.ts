/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  NTERC721Asset,
  NTERC721AssetInterface,
  BaseAssetArgsStruct,
} from "../../../../../contracts/asset/erc721/NTERC721Asset.sol/NTERC721Asset";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "assetFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "assetRegistry",
            type: "address",
          },
          {
            internalType: "address",
            name: "avatarRegistry",
            type: "address",
          },
          {
            internalType: "address",
            name: "experienceRegistry",
            type: "address",
          },
        ],
        internalType: "struct BaseAssetArgs",
        name: "args",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "condition",
        type: "address",
      },
    ],
    name: "AssetConditionAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "condition",
        type: "address",
      },
    ],
    name: "AssetConditionRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "hook",
        type: "address",
      },
    ],
    name: "AssetHookAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "hook",
        type: "address",
      },
    ],
    name: "AssetHookRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAsset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAsset",
        type: "address",
      },
    ],
    name: "ERC721Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IAssetCondition",
        name: "condition",
        type: "address",
      },
    ],
    name: "addCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAssetHook",
        name: "_hook",
        type: "address",
      },
    ],
    name: "addHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "avatarRegistry",
    outputs: [
      {
        internalType: "contract IAvatarRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "canMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "world",
            type: "address",
          },
          {
            internalType: "address",
            name: "company",
            type: "address",
          },
          {
            internalType: "address",
            name: "experience",
            type: "address",
          },
          {
            internalType: "address",
            name: "avatar",
            type: "address",
          },
        ],
        internalType: "struct AssetCheckArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "canUseAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "world",
            type: "address",
          },
          {
            internalType: "address",
            name: "company",
            type: "address",
          },
          {
            internalType: "address",
            name: "experience",
            type: "address",
          },
          {
            internalType: "address",
            name: "avatar",
            type: "address",
          },
        ],
        internalType: "struct AssetCheckArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "canViewAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "issuer",
            type: "address",
          },
          {
            internalType: "address",
            name: "originChainAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "originChainId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "baseURI",
            type: "string",
          },
        ],
        internalType: "struct ERC721InitData",
        name: "data",
        type: "tuple",
      },
    ],
    name: "encodeInitData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "experienceRegistry",
    outputs: [
      {
        internalType: "contract IExperienceRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "issuer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "originAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "originChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nextVersion",
        type: "address",
      },
    ],
    name: "upgradeComplete",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162002dcf38038062002dcf833981016040819052620000359162000258565b6001600055805181906001600160a01b0316620000ad5760405162461bcd60e51b815260206004820152602b60248201527f4261736541737365743a206173736574466163746f727920697320746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b60208101516001600160a01b03166200011e5760405162461bcd60e51b815260206004820152602c60248201527f4261736541737365743a2061737365745265676973747279206973207468652060448201526b7a65726f206164647265737360a01b6064820152608401620000a4565b60408101516001600160a01b0316620001905760405162461bcd60e51b815260206004820152602d60248201527f4261736541737365743a2061766174617252656769737472792069732074686560448201526c207a65726f206164647265737360981b6064820152608401620000a4565b60608101516001600160a01b0316620002065760405162461bcd60e51b815260206004820152603160248201527f4261736541737365743a20657870657269656e6365526567697374727920697360448201527020746865207a65726f206164647265737360781b6064820152608401620000a4565b80516001600160a01b039081166080526020820151811660a0526040820151811660c0526060909101511660e05250620002ec565b80516001600160a01b03811681146200025357600080fd5b919050565b6000608082840312156200026b57600080fd5b604051608081016001600160401b03811182821017156200029c57634e487b7160e01b600052604160045260246000fd5b604052620002aa836200023b565b8152620002ba602084016200023b565b6020820152620002cd604084016200023b565b6040820152620002e0606084016200023b565b60608201529392505050565b60805160a05160c05160e051612a8d62000342600039600061038f01526000818161049201526114280152600081816103be015261082b015260008181610458015281816108a30152610add0152612a8d6000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c80636352211e1161011a578063a22cb465116100ad578063c3acb4d11161007c578063c3acb4d114610453578063c87b56dd1461047a578063e3d7ad731461048d578063e517fedd146104b4578063e985e9c5146104bc57600080fd5b8063a22cb46514610411578063b4e75b9b1461041f578063b510391f14610432578063b88d4fde1461044557600080fd5b806395d89b41116100e957806395d89b41146103b1578063979d7e86146103b95780639a973844146103e05780639e54c0a2146103f357600080fd5b80636352211e1461035157806370a08231146103645780637b4e04e8146103775780638f09a6be1461038a57600080fd5b806323b872dd1161019d5780633fa47f171161016c5780633fa47f17146102fd57806342842e0e146103105780634ddf47d41461032357806354fd4d501461033657806361f3fcb21461033e57600080fd5b806323b872dd146102c157806325394645146102cf5780632663d1f7146102e2578063378f17ff146102f557600080fd5b8063095ea7b3116101d9578063095ea7b31461027d5780630ac7f561146102905780631d143848146102a657806322d34932146102ae57600080fd5b806301ffc9a71461020b578063021665b71461023357806306fdde031461023d578063081812fc14610252575b600080fd5b61021e610219366004611fae565b6104cf565b60405190151581526020015b60405180910390f35b61023b610521565b005b6102456105b8565b60405161022a919061201b565b61026561026036600461202e565b610653565b6040516001600160a01b03909116815260200161022a565b61023b61028b36600461206c565b610668565b6102986106bc565b60405190815260200161022a565b6102656106cf565b61023b6102bc366004612098565b6106eb565b61023b61028b3660046120b5565b61023b6102dd36600461213e565b6107e1565b61023b6102f0366004612098565b610898565b61023b610981565b61021e61030b3660046121ed565b610a0f565b61023b61031e3660046120b5565b610ab2565b61023b610331366004612301565b610ad2565b610298600181565b61024561034c366004612335565b610ea0565b61026561035f36600461202e565b610ec9565b610298610372366004612098565b610ed4565b61023b610385366004612098565b610f3b565b6102657f000000000000000000000000000000000000000000000000000000000000000081565b610245611031565b6102657f000000000000000000000000000000000000000000000000000000000000000081565b61023b6103ee366004612415565b611049565b61021e610401366004612415565b50506001600160a01b0316151590565b61023b61028b366004612477565b61021e61042d3660046121ed565b61126f565b61023b610440366004612415565b6112ca565b61023b61028b3660046124b0565b6102657f000000000000000000000000000000000000000000000000000000000000000081565b61024561048836600461202e565b611532565b6102657f000000000000000000000000000000000000000000000000000000000000000081565b610265611599565b61021e6104ca36600461251b565b6115b7565b60006001600160e01b031982166380ac58cd60e01b148061050057506001600160e01b03198216635b5e139f60e01b145b8061051b57506001600160e01b031982166301ffc9a760e01b145b92915050565b610529611604565b600101546001600160a01b0316331461055d5760405162461bcd60e51b815260040161055490612549565b60405180910390fd5b6000610567611604565b60038101546040519192506001600160a01b03169081907f2df08b6a3a4aed918c51e7ac3bbbe4f82bb09d26fef89a0c23ddc38c1a3c385b90600090a25060030180546001600160a01b0319169055565b60606105c2611604565b60050180546105d090612580565b80601f01602080910402602001604051908101604052809291908181526020018280546105fc90612580565b80156106495780601f1061061e57610100808354040283529160200191610649565b820191906000526020600020905b81548152906001019060200180831161062c57829003601f168201915b5050505050905090565b600061065e82611628565b5061051b82611660565b60405162461bcd60e51b815260206004820152602360248201527f4e544552433732313a20746f6b656e206973206e6f6e2d7472616e7366657261604482015262626c6560e81b6064820152608401610554565b60006106c6611604565b60040154905090565b60006106d9611604565b600101546001600160a01b0316919050565b6106f3611604565b600101546001600160a01b0316331461071e5760405162461bcd60e51b815260040161055490612549565b6000610728611604565b90506001600160a01b0382166107945760405162461bcd60e51b815260206004820152602b60248201527f4261736541737365743a20636f6e646974696f6e2063616e6e6f74206265207a60448201526a65726f206164647265737360a81b6064820152608401610554565b6003810180546001600160a01b0319166001600160a01b0384169081179091556040517fb17f5e42ddd024b71620166aeff196e5f40a39a3d7fe8082929e768015fbf7c190600090a25050565b6107e9611604565b600101546001600160a01b031633146108145760405162461bcd60e51b815260040161055490612549565b604051633cbd429360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633cbd42939061086290859085906004016125ba565b600060405180830381600087803b15801561087c57600080fd5b505af1158015610890573d6000803e3d6000fd5b505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109105760405162461bcd60e51b815260206004820152601f60248201527f4261736541737365743a206f6e6c7920666163746f727920616c6c6f776564006044820152606401610554565b7f1f07e7b49187e1cf67924ca1fa35732211c5bb2c23b6b53ee47453438de7285e80546001600160a01b031981166001600160a01b03848116918217845560405192169182907f9603bf83c2911c6b0dd953eb62e0804c697e90855fa1007b93c0964cb39d8e1690600090a3505050565b610989611604565b600101546001600160a01b031633146109b45760405162461bcd60e51b815260040161055490612549565b60006109be611604565b60028101546040519192506001600160a01b03169081907f94dff9f830507f1f2b72515aaaaa174f690a73801b6ab87ae6d75e584de177c890600090a25060020180546001600160a01b0319169055565b600080610a1a611604565b60038101549091506001600160a01b0316610a385750600192915050565b60038101546040516377b63b9160e11b81526001600160a01b039091169063ef6c772290610a6a9086906004016125e9565b602060405180830381865afa158015610a87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aab9190612630565b9392505050565b610acd83838360405180602001604052806000815250610668565b505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b4a5760405162461bcd60e51b815260206004820152601f60248201527f4261736541737365743a206f6e6c7920666163746f727920616c6c6f776564006044820152606401610554565b600081806020019051810190610b60919061269d565b80519091506001600160a01b0316610bc65760405162461bcd60e51b8152602060048201526024808201527f4e544552433732313a2069737375657220697320746865207a65726f206164646044820152637265737360e01b6064820152608401610554565b600081606001515111610c1b5760405162461bcd60e51b815260206004820152601760248201527f4e544552433732313a206e616d6520697320656d7074790000000000000000006044820152606401610554565b600081608001515111610c705760405162461bcd60e51b815260206004820152601960248201527f4e544552433732313a2073796d626f6c20697320656d707479000000000000006044820152606401610554565b60008160a001515111610cc55760405162461bcd60e51b815260206004820152601a60248201527f4e544552433732313a206261736555524920697320656d7074790000000000006044820152606401610554565b60208101516001600160a01b0316610d385760405162461bcd60e51b815260206004820152603060248201527f4e544552433732313a206f726967696e436861696e416464726573732069732060448201526f746865207a65726f206164647265737360801b6064820152608401610554565b6000816040015111610d8c5760405162461bcd60e51b815260206004820152601f60248201527f4e544552433732313a206f726967696e436861696e4964206973207a65726f006044820152606401610554565b80517fe4601683e66aea7671ff73b360b1d51806ae4f53b8823a6b0aac4436f7c181ee80546001600160a01b039283166001600160a01b031990911617905560208201517fe4601683e66aea7671ff73b360b1d51806ae4f53b8823a6b0aac4436f7c181ed80549190921661010002610100600160a81b031990911617905560408101517fe4601683e66aea7671ff73b360b1d51806ae4f53b8823a6b0aac4436f7c181f1556060810151600080516020612a38833981519152907fe4601683e66aea7671ff73b360b1d51806ae4f53b8823a6b0aac4436f7c181f290610e7390826127b6565b506080820151600c820190610e8890826127b6565b5060a08201518190610e9a90826127b6565b50505050565b606081604051602001610eb39190612875565b6040516020818303038152906040529050919050565b600061051b82611628565b60006001600160a01b038216610f00576040516322718ad960e21b815260006004820152602401610554565b506001600160a01b031660009081527fe4601683e66aea7671ff73b360b1d51806ae4f53b8823a6b0aac4436f7c181ea602052604090205490565b610f43611604565b600101546001600160a01b03163314610f6e5760405162461bcd60e51b815260040161055490612549565b6000610f78611604565b60028101549091506001600160a01b0316610fe45760405162461bcd60e51b815260206004820152602660248201527f4261736541737365743a20686f6f6b2063616e6e6f74206265207a65726f206160448201526564647265737360d01b6064820152608401610554565b6002810180546001600160a01b0319166001600160a01b0384169081179091556040517ff716b9f35a5af170228b0c97201cc581ce2ca1703824fd6b78f3583f28f7eedc90600090a25050565b606061103b611604565b60060180546105d090612580565b61105161169a565b611059611604565b600101546001600160a01b031633146110845760405162461bcd60e51b815260040161055490612549565b60006110928284018461202e565b90506001600160a01b0384166110f65760405162461bcd60e51b815260206004820152602360248201527f4e5445524337323141737365743a20746f6b656e20646f6573206e6f742065786044820152621a5cdd60ea1b6064820152608401610554565b836001600160a01b0316611109826116c4565b6001600160a01b0316146111795760405162461bcd60e51b815260206004820152603160248201527f4e5445524337323141737365743a206e6f7420746865206f776e6572206f66206044820152701d1bdad95b881a59081c1c9bdd9a591959607a1b6064820152608401610554565b7fe4601683e66aea7671ff73b360b1d51806ae4f53b8823a6b0aac4436f7c181ef54600080516020612a38833981519152906001600160a01b03161561125a5760088101546040516335661e9560e21b81523060048201526001600160a01b03878116602483015260448201859052600092169063d5987a54906064016020604051808303816000875af1158015611215573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112399190612630565b9050806112585760405162461bcd60e51b815260040161055490612900565b505b611263826116fe565b5050610acd6001600055565b60008061127a611604565b60038101549091506001600160a01b03166112985750600192915050565b600381015460405163eab4ad0360e01b81526001600160a01b039091169063eab4ad0390610a6a9086906004016125e9565b6112d261169a565b6112da611604565b600101546001600160a01b031633146113055760405162461bcd60e51b815260040161055490612549565b7fe4601683e66aea7671ff73b360b1d51806ae4f53b8823a6b0aac4436f7c181ef54600080516020612a38833981519152906001600160a01b0316156114095760088101546001808301546000926001600160a01b0316916386b84187913091899161137091612965565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af11580156113c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e89190612630565b9050806114075760405162461bcd60e51b815260040161055490612900565b505b604051632b0fe8e760e21b81526001600160a01b0385811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063ac3fa39c90602401602060405180830381865afa15801561146f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114939190612630565b1561150e576000849050806001600160a01b031663181d939b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ff9190612630565b61150c5761150c8561173d565b505b806001016000815461151f90612978565b909155506001810154611263858261190f565b606061153d82611628565b506000611548611929565b905060008151116115685760405180602001604052806000815250610aab565b8061157284611945565b604051602001611583929190612991565b6040516020818303038152906040529392505050565b60006115a3611604565b5461010090046001600160a01b0316919050565b6001600160a01b0391821660009081527fe4601683e66aea7671ff73b360b1d51806ae4f53b8823a6b0aac4436f7c181ec6020908152604080832093909416825291909152205460ff1690565b7fe4601683e66aea7671ff73b360b1d51806ae4f53b8823a6b0aac4436f7c181ed90565b600080611634836116c4565b90506001600160a01b03811661051b57604051637e27328960e01b815260048101849052602401610554565b60009081527fe4601683e66aea7671ff73b360b1d51806ae4f53b8823a6b0aac4436f7c181eb60205260409020546001600160a01b031690565b6002600054036116bd57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b60009081527fe4601683e66aea7671ff73b360b1d51806ae4f53b8823a6b0aac4436f7c181e960205260409020546001600160a01b031690565b600061170d60008360006119d7565b90506001600160a01b03811661173957604051637e27328960e01b815260048101839052602401610554565b5050565b6000816001600160a01b031663516f279e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561177d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a191906129c0565b905060006117ad611604565b90506001600160a01b03821661180f5760405162461bcd60e51b815260206004820152602160248201527f4261736541737365743a2061766174617220686173206e6f206c6f636174696f6044820152603760f91b6064820152608401610554565b600181015460408051636904c94d60e01b815290516001600160a01b0392831692851691636904c94d9160048083019260209291908290030181865afa15801561185d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188191906129c0565b6001600160a01b031614610acd5760405162461bcd60e51b815260206004820152604960248201527f4261736541737365743a2061766174617220646f6573206e6f7420616c6c6f7760448201527f20617373657473206f757473696465206f66206974732063757272656e7420656064820152687870657269656e636560b81b608482015260a401610554565b611739828260405180602001604052806000815250611ae1565b6060600080516020612a3883398151915280546105d090612580565b6060600061195283611af8565b60010190506000816001600160401b038111156119715761197161217f565b6040519080825280601f01601f19166020018201604052801561199b576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846119a557509392505050565b6000806119e3846116c4565b9050600080516020612a388339815191526001600160a01b03841615611a0e57611a0e828587611bd0565b6001600160a01b03821615611a4e57611a2b600086600080611c34565b6001600160a01b0382166000908152600382016020526040902080546000190190555b6001600160a01b03861615611a7f576001600160a01b03861660009081526003820160205260409020805460010190555b600085815260028201602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a450949350505050565b611aeb8383611d59565b610acd6000848484611e06565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611b375772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611b63576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611b8157662386f26fc10000830492506010015b6305f5e1008310611b99576305f5e100830492506008015b6127108310611bad57612710830492506004015b60648310611bbf576064830492506002015b600a831061051b5760010192915050565b611bdb838383611f2f565b610acd576001600160a01b038316611c0957604051637e27328960e01b815260048101829052602401610554565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610554565b8080611c4857506001600160a01b03821615155b15611d0a576000611c5884611628565b90506001600160a01b03831615801590611c845750826001600160a01b0316816001600160a01b031614155b8015611c975750611c9581846115b7565b155b15611cc05760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610554565b8115611d085783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b505060009081527fe4601683e66aea7671ff73b360b1d51806ae4f53b8823a6b0aac4436f7c181eb6020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038216611d8357604051633250574960e11b815260006004820152602401610554565b6000611d91838360006119d7565b90506001600160a01b03811615611dbe576040516339e3563760e11b815260006004820152602401610554565b826001600160a01b03167f1292a1381d69fd0f033102672143fff68d426b4b73eb1fa4df2620aeed9a299483604051611df991815260200190565b60405180910390a2505050565b6001600160a01b0383163b15610e9a57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290611e489033908890879087906004016129dd565b6020604051808303816000875af1925050508015611e83575060408051601f3d908101601f19168201909252611e8091810190612a1a565b60015b611eec573d808015611eb1576040519150601f19603f3d011682016040523d82523d6000602084013e611eb6565b606091505b508051600003611ee457604051633250574960e11b81526001600160a01b0385166004820152602401610554565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14611f2857604051633250574960e11b81526001600160a01b0385166004820152602401610554565b5050505050565b60006001600160a01b03831615801590611f8d5750826001600160a01b0316846001600160a01b03161480611f695750611f6984846115b7565b80611f8d5750826001600160a01b0316611f8283611660565b6001600160a01b0316145b949350505050565b6001600160e01b031981168114611fab57600080fd5b50565b600060208284031215611fc057600080fd5b8135610aab81611f95565b60005b83811015611fe6578181015183820152602001611fce565b50506000910152565b60008151808452612007816020860160208601611fcb565b601f01601f19169290920160200192915050565b602081526000610aab6020830184611fef565b60006020828403121561204057600080fd5b5035919050565b6001600160a01b0381168114611fab57600080fd5b803561206781612047565b919050565b6000806040838503121561207f57600080fd5b823561208a81612047565b946020939093013593505050565b6000602082840312156120aa57600080fd5b8135610aab81612047565b6000806000606084860312156120ca57600080fd5b83356120d581612047565b925060208401356120e581612047565b929592945050506040919091013590565b60008083601f84011261210857600080fd5b5081356001600160401b0381111561211f57600080fd5b60208301915083602082850101111561213757600080fd5b9250929050565b6000806020838503121561215157600080fd5b82356001600160401b0381111561216757600080fd5b612173858286016120f6565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b03811182821017156121b7576121b761217f565b60405290565b604051601f8201601f191681016001600160401b03811182821017156121e5576121e561217f565b604052919050565b600060a082840312156121ff57600080fd5b60405160a081018181106001600160401b03821117156122215761222161217f565b604052823561222f81612047565b8152602083013561223f81612047565b6020820152604083013561225281612047565b6040820152606083013561226581612047565b6060820152608083013561227881612047565b60808201529392505050565b60006001600160401b0382111561229d5761229d61217f565b50601f01601f191660200190565b600082601f8301126122bc57600080fd5b81356122cf6122ca82612284565b6121bd565b8181528460208386010111156122e457600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561231357600080fd5b81356001600160401b0381111561232957600080fd5b611f8d848285016122ab565b60006020828403121561234757600080fd5b81356001600160401b038082111561235e57600080fd5b9083019060c0828603121561237257600080fd5b61237a612195565b6123838361205c565b81526123916020840161205c565b6020820152604083013560408201526060830135828111156123b257600080fd5b6123be878286016122ab565b6060830152506080830135828111156123d657600080fd5b6123e2878286016122ab565b60808301525060a0830135828111156123fa57600080fd5b612406878286016122ab565b60a08301525095945050505050565b60008060006040848603121561242a57600080fd5b833561243581612047565b925060208401356001600160401b0381111561245057600080fd5b61245c868287016120f6565b9497909650939450505050565b8015158114611fab57600080fd5b6000806040838503121561248a57600080fd5b823561249581612047565b915060208301356124a581612469565b809150509250929050565b600080600080608085870312156124c657600080fd5b84356124d181612047565b935060208501356124e181612047565b92506040850135915060608501356001600160401b0381111561250357600080fd5b61250f878288016122ab565b91505092959194509250565b6000806040838503121561252e57600080fd5b823561253981612047565b915060208301356124a581612047565b6020808252601e908201527f4261736541737365743a206f6e6c792069737375657220616c6c6f7765640000604082015260600190565b600181811c9082168061259457607f821691505b6020821081036125b457634e487b7160e01b600052602260045260246000fd5b50919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b81516001600160a01b039081168252602080840151821690830152604080840151821690830152606080840151821690830152608092830151169181019190915260a00190565b60006020828403121561264257600080fd5b8151610aab81612469565b805161206781612047565b600082601f83011261266957600080fd5b81516126776122ca82612284565b81815284602083860101111561268c57600080fd5b611f8d826020830160208701611fcb565b6000602082840312156126af57600080fd5b81516001600160401b03808211156126c657600080fd5b9083019060c082860312156126da57600080fd5b6126e2612195565b6126eb8361264d565b81526126f96020840161264d565b60208201526040830151604082015260608301518281111561271a57600080fd5b61272687828601612658565b60608301525060808301518281111561273e57600080fd5b61274a87828601612658565b60808301525060a08301518281111561276257600080fd5b61240687828601612658565b601f821115610acd576000816000526020600020601f850160051c810160208610156127975750805b601f850160051c820191505b81811015610890578281556001016127a3565b81516001600160401b038111156127cf576127cf61217f565b6127e3816127dd8454612580565b8461276e565b602080601f83116001811461281857600084156128005750858301515b600019600386901b1c1916600185901b178555610890565b600085815260208120601f198616915b8281101561284757888601518255948401946001909101908401612828565b50858210156128655787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152600060018060a01b038084511660208401528060208501511660408401525060408301516060830152606083015160c060808401526128bb60e0840182611fef565b90506080840151601f19808584030160a08601526128d98383611fef565b925060a08601519150808584030160c0860152506128f78282611fef565b95945050505050565b6020808252602f908201527f4e5445524337323141737365743a206265666f72654d696e7420686f6f6b207260408201526e195a9958dd1959081c995c5d595cdd608a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561051b5761051b61294f565b60006001820161298a5761298a61294f565b5060010190565b600083516129a3818460208801611fcb565b8351908301906129b7818360208801611fcb565b01949350505050565b6000602082840312156129d257600080fd5b8151610aab81612047565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a1090830184611fef565b9695505050505050565b600060208284031215612a2c57600080fd5b8151610aab81611f9556fee4601683e66aea7671ff73b360b1d51806ae4f53b8823a6b0aac4436f7c181e7a26469706673582212206ad98438410cd552d5b00242814b002185a6186dc23e0551b9137c83620fe5e664736f6c63430008180033";

type NTERC721AssetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NTERC721AssetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NTERC721Asset__factory extends ContractFactory {
  constructor(...args: NTERC721AssetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    args: BaseAssetArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(args, overrides || {});
  }
  override deploy(
    args: BaseAssetArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(args, overrides || {}) as Promise<
      NTERC721Asset & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NTERC721Asset__factory {
    return super.connect(runner) as NTERC721Asset__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NTERC721AssetInterface {
    return new Interface(_abi) as NTERC721AssetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NTERC721Asset {
    return new Contract(address, _abi, runner) as unknown as NTERC721Asset;
  }
}
