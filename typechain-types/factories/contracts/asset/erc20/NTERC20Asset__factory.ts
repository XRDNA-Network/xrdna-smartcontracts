/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  NTERC20Asset,
  NTERC20AssetInterface,
  BaseAssetArgsStruct,
} from "../../../../contracts/asset/erc20/NTERC20Asset";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "assetFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "assetRegistry",
            type: "address",
          },
          {
            internalType: "address",
            name: "avatarRegistry",
            type: "address",
          },
          {
            internalType: "address",
            name: "experienceRegistry",
            type: "address",
          },
        ],
        internalType: "struct BaseAssetArgs",
        name: "args",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "condition",
        type: "address",
      },
    ],
    name: "AssetConditionAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "condition",
        type: "address",
      },
    ],
    name: "AssetConditionRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "hook",
        type: "address",
      },
    ],
    name: "AssetHookAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "hook",
        type: "address",
      },
    ],
    name: "AssetHookRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "ERC20Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAsset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAsset",
        type: "address",
      },
    ],
    name: "ERC20Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IAssetCondition",
        name: "condition",
        type: "address",
      },
    ],
    name: "addCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAssetHook",
        name: "_hook",
        type: "address",
      },
    ],
    name: "addHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "avatarRegistry",
    outputs: [
      {
        internalType: "contract IAvatarRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "canMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "world",
            type: "address",
          },
          {
            internalType: "address",
            name: "company",
            type: "address",
          },
          {
            internalType: "address",
            name: "experience",
            type: "address",
          },
          {
            internalType: "address",
            name: "avatar",
            type: "address",
          },
        ],
        internalType: "struct AssetCheckArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "canUseAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "world",
            type: "address",
          },
          {
            internalType: "address",
            name: "company",
            type: "address",
          },
          {
            internalType: "address",
            name: "experience",
            type: "address",
          },
          {
            internalType: "address",
            name: "avatar",
            type: "address",
          },
        ],
        internalType: "struct AssetCheckArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "canViewAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "originChainAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "issuer",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "originChainId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
        ],
        internalType: "struct ERC20InitData",
        name: "data",
        type: "tuple",
      },
    ],
    name: "encodeInitData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "experienceRegistry",
    outputs: [
      {
        internalType: "contract IExperienceRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "issuer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "originAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "originChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tgt",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAsset",
        type: "address",
      },
    ],
    name: "upgradeComplete",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610100604052600180553480156200001657600080fd5b50604051620026673803806200266783398101604081905262000039916200025c565b6001600055805181906001600160a01b0316620000b15760405162461bcd60e51b815260206004820152602b60248201527f4261736541737365743a206173736574466163746f727920697320746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b60208101516001600160a01b0316620001225760405162461bcd60e51b815260206004820152602c60248201527f4261736541737365743a2061737365745265676973747279206973207468652060448201526b7a65726f206164647265737360a01b6064820152608401620000a8565b60408101516001600160a01b0316620001945760405162461bcd60e51b815260206004820152602d60248201527f4261736541737365743a2061766174617252656769737472792069732074686560448201526c207a65726f206164647265737360981b6064820152608401620000a8565b60608101516001600160a01b03166200020a5760405162461bcd60e51b815260206004820152603160248201527f4261736541737365743a20657870657269656e6365526567697374727920697360448201527020746865207a65726f206164647265737360781b6064820152608401620000a8565b80516001600160a01b039081166080526020820151811660a0526040820151811660c0526060909101511660e05250620002f0565b80516001600160a01b03811681146200025757600080fd5b919050565b6000608082840312156200026f57600080fd5b604051608081016001600160401b0381118282101715620002a057634e487b7160e01b600052604160045260246000fd5b604052620002ae836200023f565b8152620002be602084016200023f565b6020820152620002d1604084016200023f565b6040820152620002e4606084016200023f565b60608201529392505050565b60805160a05160c05160e0516123216200034660003960006103620152600081816104570152611478015260008181610391015261081101526000818161041d015281816108890152610b3b01526123216000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806354fd4d50116101045780639e54c0a2116100a2578063c3acb4d111610071578063c3acb4d114610418578063dd62ed3e1461043f578063e3d7ad7314610452578063e517fedd1461047957600080fd5b80639e54c0a2146103c6578063a9059cbb146103e4578063b4e75b9b146103f2578063b510391f1461040557600080fd5b80638f09a6be116100de5780638f09a6be1461035d57806395d89b4114610384578063979d7e861461038c5780639a973844146103b357600080fd5b806354fd4d501461032e57806370a08231146103375780637b4e04e81461034a57600080fd5b806322d349321161017c578063313ce5671161014b578063313ce567146102e6578063378f17ff146103005780633fa47f17146103085780634ddf47d41461031b57600080fd5b806322d349321461029a57806323b872dd146102ad57806325394645146102c05780632663d1f7146102d357600080fd5b80630ac7f561116101b85780630ac7f5611461022a57806318160ddd146102405780631d143848146102675780631fa9ee4c1461028757600080fd5b8063021665b7146101df57806306fdde03146101e9578063095ea7b314610207575b600080fd5b6101e7610481565b005b6101f1610518565b6040516101fe9190611a4b565b60405180910390f35b61021a610215366004611a86565b6105b3565b60405190151581526020016101fe565b610232610616565b6040519081526020016101fe565b7f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb860454610232565b61026f610629565b6040516001600160a01b0390911681526020016101fe565b6101f1610295366004611bc2565b610645565b6101e76102a8366004611c90565b61066e565b61021a6102bb366004611cad565b610764565b6101e76102ce366004611d37565b6107c7565b6101e76102e1366004611c90565b61087e565b6102ee6109ec565b60405160ff90911681526020016101fe565b6101e76109ff565b61021a610316366004611d79565b610a8d565b6101e7610329366004611e11565b610b30565b61023260015481565b610232610345366004611c90565b610f39565b6101e7610358366004611c90565b610f73565b61026f7f000000000000000000000000000000000000000000000000000000000000000081565b6101f1611069565b61026f7f000000000000000000000000000000000000000000000000000000000000000081565b6101e76103c1366004611e62565b611081565b61021a6103d4366004611e62565b50506001600160a01b0316151590565b61021a6102bb366004611a86565b61021a610400366004611d79565b61129c565b6101e7610413366004611e62565b6112f7565b61026f7f000000000000000000000000000000000000000000000000000000000000000081565b61023261044d366004611eb7565b611574565b61026f7f000000000000000000000000000000000000000000000000000000000000000081565b61026f6115c0565b6104896115de565b600101546001600160a01b031633146104bd5760405162461bcd60e51b81526004016104b490611ef0565b60405180910390fd5b60006104c76115de565b60038101546040519192506001600160a01b03169081907f2df08b6a3a4aed918c51e7ac3bbbe4f82bb09d26fef89a0c23ddc38c1a3c385b90600090a25060030180546001600160a01b0319169055565b60606105226115de565b600501805461053090611f27565b80601f016020809104026020016040519081016040528092919081815260200182805461055c90611f27565b80156105a95780601f1061057e576101008083540402835291602001916105a9565b820191906000526020600020905b81548152906001019060200180831161058c57829003601f168201915b5050505050905090565b60405162461bcd60e51b815260206004820152602f60248201527f4e6f6e5472616e7366657261626c6545524332303a20617070726f76616c732060448201526e1b9bdd08185b1b1bddd959081e595d608a1b60648201526000906084016104b4565b60006106206115de565b60040154905090565b60006106336115de565b600101546001600160a01b0316919050565b6060816040516020016106589190611f61565b6040516020818303038152906040529050919050565b6106766115de565b600101546001600160a01b031633146106a15760405162461bcd60e51b81526004016104b490611ef0565b60006106ab6115de565b90506001600160a01b0382166107175760405162461bcd60e51b815260206004820152602b60248201527f4261736541737365743a20636f6e646974696f6e2063616e6e6f74206265207a60448201526a65726f206164647265737360a81b60648201526084016104b4565b6003810180546001600160a01b0319166001600160a01b0384169081179091556040517fb17f5e42ddd024b71620166aeff196e5f40a39a3d7fe8082929e768015fbf7c190600090a25050565b60405162461bcd60e51b815260206004820152602f60248201527f4e6f6e5472616e7366657261626c6545524332303a207472616e73666572732060448201526e1b9bdd08185b1b1bddd959081e595d608a1b60648201526000906084016104b4565b6107cf6115de565b600101546001600160a01b031633146107fa5760405162461bcd60e51b81526004016104b490611ef0565b604051633cbd429360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633cbd4293906108489085908590600401611fda565b600060405180830381600087803b15801561086257600080fd5b505af1158015610876573d6000803e3d6000fd5b505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108f65760405162461bcd60e51b815260206004820152601f60248201527f4261736541737365743a206f6e6c7920666163746f727920616c6c6f7765640060448201526064016104b4565b306001600160a01b03821603610976576040805162461bcd60e51b81526020600482015260248101919091527f4e54455243323041737365743a206e6577207570677261646520636f6e74726160448201527f637420616464726573732063616e6e6f74206d61746368206f726967696e616c60648201526084016104b4565b7f1f07e7b49187e1cf67924ca1fa35732211c5bb2c23b6b53ee47453438de7285e80546001600160a01b0319166001600160a01b038316908117825560405190815230907fe0cdc3a6eaf24c066560b5cb2e50c08f3d82cce0e3d838dc7032ba68790cd52b906020015b60405180910390a25050565b60006109f66115de565b5460ff16919050565b610a076115de565b600101546001600160a01b03163314610a325760405162461bcd60e51b81526004016104b490611ef0565b6000610a3c6115de565b60028101546040519192506001600160a01b03169081907f94dff9f830507f1f2b72515aaaaa174f690a73801b6ab87ae6d75e584de177c890600090a25060020180546001600160a01b0319169055565b600080610a986115de565b60038101549091506001600160a01b0316610ab65750600192915050565b60038101546040516377b63b9160e11b81526001600160a01b039091169063ef6c772290610ae8908690600401612009565b602060405180830381865afa158015610b05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b299190612050565b9392505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ba85760405162461bcd60e51b815260206004820152601f60248201527f4261736541737365743a206f6e6c7920666163746f727920616c6c6f7765640060448201526064016104b4565b600081806020019051810190610bbe91906120cd565b60208101519091506001600160a01b0316610c375760405162461bcd60e51b815260206004820152603360248201527f4e6f6e5472616e7366657261626c6545524332303a206973737565722063616e6044820152726e6f74206265207a65726f206164647265737360681b60648201526084016104b4565b80516001600160a01b0316610ca75760405162461bcd60e51b815260206004820152603060248201527f41737365743a206f726967696e436861696e416464726573732063616e6e6f7460448201526f206265207a65726f206164647265737360801b60648201526084016104b4565b600081608001515111610d0f5760405162461bcd60e51b815260206004820152602a60248201527f4e6f6e5472616e7366657261626c6545524332303a206e616d652063616e6e6f6044820152697420626520656d70747960b01b60648201526084016104b4565b60008160a001515111610d795760405162461bcd60e51b815260206004820152602c60248201527f4e6f6e5472616e7366657261626c6545524332303a2073796d626f6c2063616e60448201526b6e6f7420626520656d70747960a01b60648201526084016104b4565b6000816060015111610df35760405162461bcd60e51b815260206004820152603d60248201527f4e6f6e5472616e7366657261626c6545524332303a206f726967696e4368616960448201527f6e4964206d7573742062652067726561746572207468616e207a65726f00000060648201526084016104b4565b80517f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb86078054610100600160a81b0319166101006001600160a01b039384160217905560208201517f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb860880546001600160a01b0319169190921617905560608101517f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb860b5560007f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb860490815560808201517f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb860c90610eec90826121d4565b5060a08201516009820190610f0190826121d4565b506000826040015160ff1611610f18576012610f1e565b81604001515b600391909101805460ff191660ff9092169190911790555050565b6001600160a01b031660009081527f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb8605602052604090205490565b610f7b6115de565b600101546001600160a01b03163314610fa65760405162461bcd60e51b81526004016104b490611ef0565b6000610fb06115de565b60028101549091506001600160a01b031661101c5760405162461bcd60e51b815260206004820152602660248201527f4261736541737365743a20686f6f6b2063616e6e6f74206265207a65726f206160448201526564647265737360d01b60648201526084016104b4565b6002810180546001600160a01b0319166001600160a01b0384169081179091556040517ff716b9f35a5af170228b0c97201cc581ce2ca1703824fd6b78f3583f28f7eedc90600090a25050565b60606110736115de565b600601805461053090611f27565b611089611602565b6110916115de565b600101546001600160a01b031633146110bc5760405162461bcd60e51b81526004016104b490611ef0565b60006110c66115de565b600201546001600160a01b0316905060006110e383850185612294565b9050806110ef86610f39565b10156111635760405162461bcd60e51b815260206004820152603960248201527f4e6f6e5472616e7366657261626c65455243323041737365743a20696e73756660448201527f66696369656e742062616c616e636520746f207265766f6b650000000000000060648201526084016104b4565b6001600160a01b03821615611266576040516335661e9560e21b81523060048201526001600160a01b038681166024830152604482018390526000919084169063d5987a54906064016020604051808303816000875af11580156111cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ef9190612050565b9050806112645760405162461bcd60e51b815260206004820152603d60248201527f4e6f6e5472616e7366657261626c65455243323041737365743a206265666f7260448201527f655265766f6b6520686f6f6b2072656a6563746564207265717565737400000060648201526084016104b4565b505b600061127186610f39565b905061128a86828410611284578261162c565b8361162c565b5050506112976001600055565b505050565b6000806112a76115de565b60038101549091506001600160a01b03166112c55750600192915050565b600381015460405163eab4ad0360e01b81526001600160a01b039091169063eab4ad0390610ae8908690600401612009565b6112ff611602565b6113076115de565b600101546001600160a01b031633146113325760405162461bcd60e51b81526004016104b490611ef0565b600061134082840184612294565b9050600061134c6115de565b60028101549091506001600160a01b0316156114595760028101546040516386b8418760e01b81523060048201526001600160a01b0387811660248301526044820185905260009216906386b84187906064016020604051808303816000875af11580156113be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e29190612050565b9050806114575760405162461bcd60e51b815260206004820152603b60248201527f4e6f6e5472616e7366657261626c65455243323041737365743a206265666f7260448201527f654d696e7420686f6f6b2072656a65637465642072657175657374000000000060648201526084016104b4565b505b604051632b0fe8e760e21b81526001600160a01b0386811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063ac3fa39c90602401602060405180830381865afa1580156114bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e39190612050565b1561155e576000859050806001600160a01b031663181d939b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561152b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154f9190612050565b61155c5761155c86611666565b505b6115688583611838565b50506112976001600055565b6001600160a01b0382811660009081527f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb860660209081526040808320938516835292905220545b92915050565b60006115ca6115de565b5461010090046001600160a01b0316919050565b7f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb860790565b60026000540361162557604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6001600160a01b03821661165657604051634b637e8f60e11b8152600060048201526024016104b4565b611662826000836118a9565b5050565b6000816001600160a01b031663516f279e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ca91906122ad565b905060006116d66115de565b90506001600160a01b0382166117385760405162461bcd60e51b815260206004820152602160248201527f4261736541737365743a2061766174617220686173206e6f206c6f636174696f6044820152603760f91b60648201526084016104b4565b600181015460408051636904c94d60e01b815290516001600160a01b0392831692851691636904c94d9160048083019260209291908290030181865afa158015611786573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117aa91906122ad565b6001600160a01b0316146112975760405162461bcd60e51b815260206004820152604960248201527f4261736541737365743a2061766174617220646f6573206e6f7420616c6c6f7760448201527f20617373657473206f757473696465206f66206974732063757272656e7420656064820152687870657269656e636560b81b608482015260a4016104b4565b6001600160a01b0382166118625760405163ec442f0560e01b8152600060048201526024016104b4565b61186e600083836118a9565b816001600160a01b03167f1f98ee45d72cac8271cfd41cc599153bf1465afc3fc1f0b3e2a97b8f1c4253a9826040516109e091815260200190565b7f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb86046001600160a01b0384166118f757818160000160008282546118ec91906122ca565b9091555061196d9050565b6001600160a01b03841660009081526001820160205260409020548281101561194c5760405163391434e360e21b81526001600160a01b038616600482015260248101829052604481018490526064016104b4565b6001600160a01b038516600090815260018301602052604090209083900390555b6001600160a01b03831661198757805482900381556119a8565b6001600160a01b038316600090815260018201602052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516119ed91815260200190565b60405180910390a350505050565b60005b83811015611a165781810151838201526020016119fe565b50506000910152565b60008151808452611a378160208601602086016119fb565b601f01601f19169290920160200192915050565b602081526000610b296020830184611a1f565b6001600160a01b0381168114611a7357600080fd5b50565b8035611a8181611a5e565b919050565b60008060408385031215611a9957600080fd5b8235611aa481611a5e565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611aeb57611aeb611ab2565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611b1a57611b1a611ab2565b604052919050565b60ff81168114611a7357600080fd5b8035611a8181611b22565b600067ffffffffffffffff821115611b5657611b56611ab2565b50601f01601f191660200190565b6000611b77611b7284611b3c565b611af1565b9050828152838383011115611b8b57600080fd5b828260208301376000602084830101529392505050565b600082601f830112611bb357600080fd5b610b2983833560208501611b64565b600060208284031215611bd457600080fd5b813567ffffffffffffffff80821115611bec57600080fd5b9083019060c08286031215611c0057600080fd5b611c08611ac8565b611c1183611a76565b8152611c1f60208401611a76565b6020820152611c3060408401611b31565b604082015260608301356060820152608083013582811115611c5157600080fd5b611c5d87828601611ba2565b60808301525060a083013582811115611c7557600080fd5b611c8187828601611ba2565b60a08301525095945050505050565b600060208284031215611ca257600080fd5b8135610b2981611a5e565b600080600060608486031215611cc257600080fd5b8335611ccd81611a5e565b92506020840135611cdd81611a5e565b929592945050506040919091013590565b60008083601f840112611d0057600080fd5b50813567ffffffffffffffff811115611d1857600080fd5b602083019150836020828501011115611d3057600080fd5b9250929050565b60008060208385031215611d4a57600080fd5b823567ffffffffffffffff811115611d6157600080fd5b611d6d85828601611cee565b90969095509350505050565b600060a08284031215611d8b57600080fd5b60405160a0810181811067ffffffffffffffff82111715611dae57611dae611ab2565b6040528235611dbc81611a5e565b81526020830135611dcc81611a5e565b60208201526040830135611ddf81611a5e565b60408201526060830135611df281611a5e565b60608201526080830135611e0581611a5e565b60808201529392505050565b600060208284031215611e2357600080fd5b813567ffffffffffffffff811115611e3a57600080fd5b8201601f81018413611e4b57600080fd5b611e5a84823560208401611b64565b949350505050565b600080600060408486031215611e7757600080fd5b8335611e8281611a5e565b9250602084013567ffffffffffffffff811115611e9e57600080fd5b611eaa86828701611cee565b9497909650939450505050565b60008060408385031215611eca57600080fd5b8235611ed581611a5e565b91506020830135611ee581611a5e565b809150509250929050565b6020808252601e908201527f4261736541737365743a206f6e6c792069737375657220616c6c6f7765640000604082015260600190565b600181811c90821680611f3b57607f821691505b602082108103611f5b57634e487b7160e01b600052602260045260246000fd5b50919050565b60208152600060018060a01b038084511660208401528060208501511660408401525060ff604084015116606083015260608301516080830152608083015160c060a0840152611fb460e0840182611a1f565b905060a0840151601f198483030160c0850152611fd18282611a1f565b95945050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b81516001600160a01b039081168252602080840151821690830152604080840151821690830152606080840151821690830152608092830151169181019190915260a00190565b60006020828403121561206257600080fd5b81518015158114610b2957600080fd5b8051611a8181611a5e565b8051611a8181611b22565b600082601f83011261209957600080fd5b81516120a7611b7282611b3c565b8181528460208386010111156120bc57600080fd5b611e5a8260208301602087016119fb565b6000602082840312156120df57600080fd5b815167ffffffffffffffff808211156120f757600080fd5b9083019060c0828603121561210b57600080fd5b612113611ac8565b61211c83612072565b815261212a60208401612072565b602082015261213b6040840161207d565b60408201526060830151606082015260808301518281111561215c57600080fd5b61216887828601612088565b60808301525060a08301518281111561218057600080fd5b611c8187828601612088565b601f821115611297576000816000526020600020601f850160051c810160208610156121b55750805b601f850160051c820191505b81811015610876578281556001016121c1565b815167ffffffffffffffff8111156121ee576121ee611ab2565b612202816121fc8454611f27565b8461218c565b602080601f831160018114612237576000841561221f5750858301515b600019600386901b1c1916600185901b178555610876565b600085815260208120601f198616915b8281101561226657888601518255948401946001909101908401612247565b50858210156122845787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156122a657600080fd5b5035919050565b6000602082840312156122bf57600080fd5b8151610b2981611a5e565b808201808211156115ba57634e487b7160e01b600052601160045260246000fdfea2646970667358221220db84dc2cd7532dcb063955349deae274eb4f52f5fe7b20fd85a02b2c886f639664736f6c63430008180033";

type NTERC20AssetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NTERC20AssetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NTERC20Asset__factory extends ContractFactory {
  constructor(...args: NTERC20AssetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    args: BaseAssetArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(args, overrides || {});
  }
  override deploy(
    args: BaseAssetArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(args, overrides || {}) as Promise<
      NTERC20Asset & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NTERC20Asset__factory {
    return super.connect(runner) as NTERC20Asset__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NTERC20AssetInterface {
    return new Interface(_abi) as NTERC20AssetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NTERC20Asset {
    return new Contract(address, _abi, runner) as unknown as NTERC20Asset;
  }
}
