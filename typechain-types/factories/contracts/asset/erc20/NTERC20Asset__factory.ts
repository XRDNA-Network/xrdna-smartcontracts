/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  NTERC20Asset,
  NTERC20AssetInterface,
  BaseAssetArgsStruct,
} from "../../../../contracts/asset/erc20/NTERC20Asset";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "assetFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "assetRegistry",
            type: "address",
          },
          {
            internalType: "address",
            name: "avatarRegistry",
            type: "address",
          },
          {
            internalType: "address",
            name: "experienceRegistry",
            type: "address",
          },
        ],
        internalType: "struct BaseAssetArgs",
        name: "args",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "condition",
        type: "address",
      },
    ],
    name: "AssetConditionAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "condition",
        type: "address",
      },
    ],
    name: "AssetConditionRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "hook",
        type: "address",
      },
    ],
    name: "AssetHookAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "hook",
        type: "address",
      },
    ],
    name: "AssetHookRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "ERC20Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAsset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAsset",
        type: "address",
      },
    ],
    name: "ERC20Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IAssetCondition",
        name: "condition",
        type: "address",
      },
    ],
    name: "addCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAssetHook",
        name: "_hook",
        type: "address",
      },
    ],
    name: "addHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "avatarRegistry",
    outputs: [
      {
        internalType: "contract IAvatarRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "canMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "world",
            type: "address",
          },
          {
            internalType: "address",
            name: "company",
            type: "address",
          },
          {
            internalType: "address",
            name: "experience",
            type: "address",
          },
          {
            internalType: "address",
            name: "avatar",
            type: "address",
          },
        ],
        internalType: "struct AssetCheckArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "canUseAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "world",
            type: "address",
          },
          {
            internalType: "address",
            name: "company",
            type: "address",
          },
          {
            internalType: "address",
            name: "experience",
            type: "address",
          },
          {
            internalType: "address",
            name: "avatar",
            type: "address",
          },
        ],
        internalType: "struct AssetCheckArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "canViewAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "originChainAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "issuer",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "originChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
        ],
        internalType: "struct ERC20InitData",
        name: "data",
        type: "tuple",
      },
    ],
    name: "encodeInitData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "experienceRegistry",
    outputs: [
      {
        internalType: "contract IExperienceRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "issuer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "originAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "originChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tgt",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAsset",
        type: "address",
      },
    ],
    name: "upgradeComplete",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610100604052600180553480156200001657600080fd5b50604051620027033803806200270383398101604081905262000039916200025c565b6001600055805181906001600160a01b0316620000b15760405162461bcd60e51b815260206004820152602b60248201527f4261736541737365743a206173736574466163746f727920697320746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b60208101516001600160a01b0316620001225760405162461bcd60e51b815260206004820152602c60248201527f4261736541737365743a2061737365745265676973747279206973207468652060448201526b7a65726f206164647265737360a01b6064820152608401620000a8565b60408101516001600160a01b0316620001945760405162461bcd60e51b815260206004820152602d60248201527f4261736541737365743a2061766174617252656769737472792069732074686560448201526c207a65726f206164647265737360981b6064820152608401620000a8565b60608101516001600160a01b03166200020a5760405162461bcd60e51b815260206004820152603160248201527f4261736541737365743a20657870657269656e6365526567697374727920697360448201527020746865207a65726f206164647265737360781b6064820152608401620000a8565b80516001600160a01b039081166080526020820151811660a0526040820151811660c0526060909101511660e05250620002f0565b80516001600160a01b03811681146200025757600080fd5b919050565b6000608082840312156200026f57600080fd5b604051608081016001600160401b0381118282101715620002a057634e487b7160e01b600052604160045260246000fd5b604052620002ae836200023f565b8152620002be602084016200023f565b6020820152620002d1604084016200023f565b6040820152620002e4606084016200023f565b60608201529392505050565b60805160a05160c05160e0516123bd62000346600039600061036201526000818161045701526114f501526000818161039101526107e801526000818161041d015281816108600152610b1201526123bd6000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80635e7a9005116101045780639e54c0a2116100a2578063c3acb4d111610071578063c3acb4d114610418578063dd62ed3e1461043f578063e3d7ad7314610452578063e517fedd1461047957600080fd5b80639e54c0a2146103c6578063a9059cbb146103e4578063b4e75b9b146103f2578063b510391f1461040557600080fd5b80638f09a6be116100de5780638f09a6be1461035d57806395d89b4114610384578063979d7e861461038c5780639a973844146103b357600080fd5b80635e7a90051461032457806370a08231146103375780637b4e04e81461034a57600080fd5b806323b872dd1161017c578063378f17ff1161014b578063378f17ff146102ed5780633fa47f17146102f55780634ddf47d41461030857806354fd4d501461031b57600080fd5b806323b872dd1461029a57806325394645146102ad5780632663d1f7146102c0578063313ce567146102d357600080fd5b80630ac7f561116101b85780630ac7f5611461022a57806318160ddd146102405780631d1438481461026757806322d349321461028757600080fd5b8063021665b7146101df57806306fdde03146101e9578063095ea7b314610207575b600080fd5b6101e7610481565b005b6101f1610518565b6040516101fe9190611ac8565b60405180910390f35b61021a610215366004611b03565b6105b3565b60405190151581526020016101fe565b610232610616565b6040519081526020016101fe565b7f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb860454610232565b61026f610629565b6040516001600160a01b0390911681526020016101fe565b6101e7610295366004611b2f565b610645565b61021a6102a8366004611b4c565b61073b565b6101e76102bb366004611bd6565b61079e565b6101e76102ce366004611b2f565b610855565b6102db6109c3565b60405160ff90911681526020016101fe565b6101e76109d6565b61021a610303366004611c88565b610a64565b6101e7610316366004611d86565b610b07565b61023260015481565b6101f1610332366004611e11565b610f8d565b610232610345366004611b2f565b610fb6565b6101e7610358366004611b2f565b610ff0565b61026f7f000000000000000000000000000000000000000000000000000000000000000081565b6101f16110e6565b61026f7f000000000000000000000000000000000000000000000000000000000000000081565b6101e76103c1366004611ee9565b6110fe565b61021a6103d4366004611ee9565b50506001600160a01b0316151590565b61021a6102a8366004611b03565b61021a610400366004611c88565b611319565b6101e7610413366004611ee9565b611374565b61026f7f000000000000000000000000000000000000000000000000000000000000000081565b61023261044d366004611f3e565b6115f1565b61026f7f000000000000000000000000000000000000000000000000000000000000000081565b61026f61163d565b61048961165b565b600101546001600160a01b031633146104bd5760405162461bcd60e51b81526004016104b490611f77565b60405180910390fd5b60006104c761165b565b60038101546040519192506001600160a01b03169081907f2df08b6a3a4aed918c51e7ac3bbbe4f82bb09d26fef89a0c23ddc38c1a3c385b90600090a25060030180546001600160a01b0319169055565b606061052261165b565b600501805461053090611fae565b80601f016020809104026020016040519081016040528092919081815260200182805461055c90611fae565b80156105a95780601f1061057e576101008083540402835291602001916105a9565b820191906000526020600020905b81548152906001019060200180831161058c57829003601f168201915b5050505050905090565b60405162461bcd60e51b815260206004820152602f60248201527f4e6f6e5472616e7366657261626c6545524332303a20617070726f76616c732060448201526e1b9bdd08185b1b1bddd959081e595d608a1b60648201526000906084016104b4565b600061062061165b565b60040154905090565b600061063361165b565b600101546001600160a01b0316919050565b61064d61165b565b600101546001600160a01b031633146106785760405162461bcd60e51b81526004016104b490611f77565b600061068261165b565b90506001600160a01b0382166106ee5760405162461bcd60e51b815260206004820152602b60248201527f4261736541737365743a20636f6e646974696f6e2063616e6e6f74206265207a60448201526a65726f206164647265737360a81b60648201526084016104b4565b6003810180546001600160a01b0319166001600160a01b0384169081179091556040517fb17f5e42ddd024b71620166aeff196e5f40a39a3d7fe8082929e768015fbf7c190600090a25050565b60405162461bcd60e51b815260206004820152602f60248201527f4e6f6e5472616e7366657261626c6545524332303a207472616e73666572732060448201526e1b9bdd08185b1b1bddd959081e595d608a1b60648201526000906084016104b4565b6107a661165b565b600101546001600160a01b031633146107d15760405162461bcd60e51b81526004016104b490611f77565b604051633cbd429360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633cbd42939061081f9085908590600401611fe8565b600060405180830381600087803b15801561083957600080fd5b505af115801561084d573d6000803e3d6000fd5b505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108cd5760405162461bcd60e51b815260206004820152601f60248201527f4261736541737365743a206f6e6c7920666163746f727920616c6c6f7765640060448201526064016104b4565b306001600160a01b0382160361094d576040805162461bcd60e51b81526020600482015260248101919091527f4e54455243323041737365743a206e6577207570677261646520636f6e74726160448201527f637420616464726573732063616e6e6f74206d61746368206f726967696e616c60648201526084016104b4565b7f1f07e7b49187e1cf67924ca1fa35732211c5bb2c23b6b53ee47453438de7285e80546001600160a01b0319166001600160a01b038316908117825560405190815230907fe0cdc3a6eaf24c066560b5cb2e50c08f3d82cce0e3d838dc7032ba68790cd52b906020015b60405180910390a25050565b60006109cd61165b565b5460ff16919050565b6109de61165b565b600101546001600160a01b03163314610a095760405162461bcd60e51b81526004016104b490611f77565b6000610a1361165b565b60028101546040519192506001600160a01b03169081907f94dff9f830507f1f2b72515aaaaa174f690a73801b6ab87ae6d75e584de177c890600090a25060020180546001600160a01b0319169055565b600080610a6f61165b565b60038101549091506001600160a01b0316610a8d5750600192915050565b60038101546040516377b63b9160e11b81526001600160a01b039091169063ef6c772290610abf908690600401612017565b602060405180830381865afa158015610adc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b00919061205e565b9392505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b7f5760405162461bcd60e51b815260206004820152601f60248201527f4261736541737365743a206f6e6c7920666163746f727920616c6c6f7765640060448201526064016104b4565b600081806020019051810190610b9591906120db565b60208101519091506001600160a01b0316610c0e5760405162461bcd60e51b815260206004820152603360248201527f4e6f6e5472616e7366657261626c6545524332303a206973737565722063616e6044820152726e6f74206265207a65726f206164647265737360681b60648201526084016104b4565b80516001600160a01b0316610c7e5760405162461bcd60e51b815260206004820152603060248201527f41737365743a206f726967696e436861696e416464726573732063616e6e6f7460448201526f206265207a65726f206164647265737360801b60648201526084016104b4565b6000816080015111610cf85760405162461bcd60e51b815260206004820152603b60248201527f4e6f6e5472616e7366657261626c6545524332303a20746f74616c537570706c60448201527f79206d7573742062652067726561746572207468616e207a65726f000000000060648201526084016104b4565b60008160a001515111610d605760405162461bcd60e51b815260206004820152602a60248201527f4e6f6e5472616e7366657261626c6545524332303a206e616d652063616e6e6f6044820152697420626520656d70747960b01b60648201526084016104b4565b60008160c001515111610dca5760405162461bcd60e51b815260206004820152602c60248201527f4e6f6e5472616e7366657261626c6545524332303a2073796d626f6c2063616e60448201526b6e6f7420626520656d70747960a01b60648201526084016104b4565b6000816060015111610e445760405162461bcd60e51b815260206004820152603d60248201527f4e6f6e5472616e7366657261626c6545524332303a206f726967696e4368616960448201527f6e4964206d7573742062652067726561746572207468616e207a65726f00000060648201526084016104b4565b80517f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb86078054610100600160a81b0319166101006001600160a01b039384160217905560208201517f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb860880546001600160a01b0319169190921617905560608101517f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb860b5560808101517f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb860490815560a08201517f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb860c90610f4090826121ec565b5060c08201516009820190610f5590826121ec565b506000826040015160ff1611610f6c576012610f72565b81604001515b600391909101805460ff191660ff9092169190911790555050565b606081604051602001610fa091906122ac565b6040516020818303038152906040529050919050565b6001600160a01b031660009081527f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb8605602052604090205490565b610ff861165b565b600101546001600160a01b031633146110235760405162461bcd60e51b81526004016104b490611f77565b600061102d61165b565b60028101549091506001600160a01b03166110995760405162461bcd60e51b815260206004820152602660248201527f4261736541737365743a20686f6f6b2063616e6e6f74206265207a65726f206160448201526564647265737360d01b60648201526084016104b4565b6002810180546001600160a01b0319166001600160a01b0384169081179091556040517ff716b9f35a5af170228b0c97201cc581ce2ca1703824fd6b78f3583f28f7eedc90600090a25050565b60606110f061165b565b600601805461053090611fae565b61110661167f565b61110e61165b565b600101546001600160a01b031633146111395760405162461bcd60e51b81526004016104b490611f77565b600061114361165b565b600201546001600160a01b03169050600061116083850185612330565b90508061116c86610fb6565b10156111e05760405162461bcd60e51b815260206004820152603960248201527f4e6f6e5472616e7366657261626c65455243323041737365743a20696e73756660448201527f66696369656e742062616c616e636520746f207265766f6b650000000000000060648201526084016104b4565b6001600160a01b038216156112e3576040516335661e9560e21b81523060048201526001600160a01b038681166024830152604482018390526000919084169063d5987a54906064016020604051808303816000875af1158015611248573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126c919061205e565b9050806112e15760405162461bcd60e51b815260206004820152603d60248201527f4e6f6e5472616e7366657261626c65455243323041737365743a206265666f7260448201527f655265766f6b6520686f6f6b2072656a6563746564207265717565737400000060648201526084016104b4565b505b60006112ee86610fb6565b90506113078682841061130157826116a9565b836116a9565b5050506113146001600055565b505050565b60008061132461165b565b60038101549091506001600160a01b03166113425750600192915050565b600381015460405163eab4ad0360e01b81526001600160a01b039091169063eab4ad0390610abf908690600401612017565b61137c61167f565b61138461165b565b600101546001600160a01b031633146113af5760405162461bcd60e51b81526004016104b490611f77565b60006113bd82840184612330565b905060006113c961165b565b60028101549091506001600160a01b0316156114d65760028101546040516386b8418760e01b81523060048201526001600160a01b0387811660248301526044820185905260009216906386b84187906064016020604051808303816000875af115801561143b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145f919061205e565b9050806114d45760405162461bcd60e51b815260206004820152603b60248201527f4e6f6e5472616e7366657261626c65455243323041737365743a206265666f7260448201527f654d696e7420686f6f6b2072656a65637465642072657175657374000000000060648201526084016104b4565b505b604051632b0fe8e760e21b81526001600160a01b0386811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063ac3fa39c90602401602060405180830381865afa15801561153c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611560919061205e565b156115db576000859050806001600160a01b031663181d939b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115cc919061205e565b6115d9576115d9866116e3565b505b6115e585836118b5565b50506113146001600055565b6001600160a01b0382811660009081527f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb860660209081526040808320938516835292905220545b92915050565b600061164761165b565b5461010090046001600160a01b0316919050565b7f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb860790565b6002600054036116a257604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6001600160a01b0382166116d357604051634b637e8f60e11b8152600060048201526024016104b4565b6116df82600083611926565b5050565b6000816001600160a01b031663516f279e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611723573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117479190612349565b9050600061175361165b565b90506001600160a01b0382166117b55760405162461bcd60e51b815260206004820152602160248201527f4261736541737365743a2061766174617220686173206e6f206c6f636174696f6044820152603760f91b60648201526084016104b4565b600181015460408051636904c94d60e01b815290516001600160a01b0392831692851691636904c94d9160048083019260209291908290030181865afa158015611803573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118279190612349565b6001600160a01b0316146113145760405162461bcd60e51b815260206004820152604960248201527f4261736541737365743a2061766174617220646f6573206e6f7420616c6c6f7760448201527f20617373657473206f757473696465206f66206974732063757272656e7420656064820152687870657269656e636560b81b608482015260a4016104b4565b6001600160a01b0382166118df5760405163ec442f0560e01b8152600060048201526024016104b4565b6118eb60008383611926565b816001600160a01b03167f1f98ee45d72cac8271cfd41cc599153bf1465afc3fc1f0b3e2a97b8f1c4253a9826040516109b791815260200190565b7f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb86046001600160a01b03841661197457818160000160008282546119699190612366565b909155506119ea9050565b6001600160a01b0384166000908152600182016020526040902054828110156119c95760405163391434e360e21b81526001600160a01b038616600482015260248101829052604481018490526064016104b4565b6001600160a01b038516600090815260018301602052604090209083900390555b6001600160a01b038316611a045780548290038155611a25565b6001600160a01b038316600090815260018201602052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611a6a91815260200190565b60405180910390a350505050565b60005b83811015611a93578181015183820152602001611a7b565b50506000910152565b60008151808452611ab4816020860160208601611a78565b601f01601f19169290920160200192915050565b602081526000610b006020830184611a9c565b6001600160a01b0381168114611af057600080fd5b50565b8035611afe81611adb565b919050565b60008060408385031215611b1657600080fd5b8235611b2181611adb565b946020939093013593505050565b600060208284031215611b4157600080fd5b8135610b0081611adb565b600080600060608486031215611b6157600080fd5b8335611b6c81611adb565b92506020840135611b7c81611adb565b929592945050506040919091013590565b60008083601f840112611b9f57600080fd5b50813567ffffffffffffffff811115611bb757600080fd5b602083019150836020828501011115611bcf57600080fd5b9250929050565b60008060208385031215611be957600080fd5b823567ffffffffffffffff811115611c0057600080fd5b611c0c85828601611b8d565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715611c5157611c51611c18565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611c8057611c80611c18565b604052919050565b600060a08284031215611c9a57600080fd5b60405160a0810181811067ffffffffffffffff82111715611cbd57611cbd611c18565b6040528235611ccb81611adb565b81526020830135611cdb81611adb565b60208201526040830135611cee81611adb565b60408201526060830135611d0181611adb565b60608201526080830135611d1481611adb565b60808201529392505050565b600067ffffffffffffffff821115611d3a57611d3a611c18565b50601f01601f191660200190565b6000611d5b611d5684611d20565b611c57565b9050828152838383011115611d6f57600080fd5b828260208301376000602084830101529392505050565b600060208284031215611d9857600080fd5b813567ffffffffffffffff811115611daf57600080fd5b8201601f81018413611dc057600080fd5b611dcf84823560208401611d48565b949350505050565b60ff81168114611af057600080fd5b8035611afe81611dd7565b600082601f830112611e0257600080fd5b610b0083833560208501611d48565b600060208284031215611e2357600080fd5b813567ffffffffffffffff80821115611e3b57600080fd5b9083019060e08286031215611e4f57600080fd5b611e57611c2e565b611e6083611af3565b8152611e6e60208401611af3565b6020820152611e7f60408401611de6565b6040820152606083013560608201526080830135608082015260a083013582811115611eaa57600080fd5b611eb687828601611df1565b60a08301525060c083013582811115611ece57600080fd5b611eda87828601611df1565b60c08301525095945050505050565b600080600060408486031215611efe57600080fd5b8335611f0981611adb565b9250602084013567ffffffffffffffff811115611f2557600080fd5b611f3186828701611b8d565b9497909650939450505050565b60008060408385031215611f5157600080fd5b8235611f5c81611adb565b91506020830135611f6c81611adb565b809150509250929050565b6020808252601e908201527f4261736541737365743a206f6e6c792069737375657220616c6c6f7765640000604082015260600190565b600181811c90821680611fc257607f821691505b602082108103611fe257634e487b7160e01b600052602260045260246000fd5b50919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b81516001600160a01b039081168252602080840151821690830152604080840151821690830152606080840151821690830152608092830151169181019190915260a00190565b60006020828403121561207057600080fd5b81518015158114610b0057600080fd5b8051611afe81611adb565b8051611afe81611dd7565b600082601f8301126120a757600080fd5b81516120b5611d5682611d20565b8181528460208386010111156120ca57600080fd5b611dcf826020830160208701611a78565b6000602082840312156120ed57600080fd5b815167ffffffffffffffff8082111561210557600080fd5b9083019060e0828603121561211957600080fd5b612121611c2e565b61212a83612080565b815261213860208401612080565b60208201526121496040840161208b565b6040820152606083015160608201526080830151608082015260a08301518281111561217457600080fd5b61218087828601612096565b60a08301525060c08301518281111561219857600080fd5b611eda87828601612096565b601f821115611314576000816000526020600020601f850160051c810160208610156121cd5750805b601f850160051c820191505b8181101561084d578281556001016121d9565b815167ffffffffffffffff81111561220657612206611c18565b61221a816122148454611fae565b846121a4565b602080601f83116001811461224f57600084156122375750858301515b600019600386901b1c1916600185901b17855561084d565b600085815260208120601f198616915b8281101561227e5788860151825594840194600190910190840161225f565b508582101561229c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152600060018060a01b038084511660208401528060208501511660408401525060ff604084015116606083015260608301516080830152608083015160a083015260a083015160e060c084015261230a610100840182611a9c565b905060c0840151601f198483030160e08501526123278282611a9c565b95945050505050565b60006020828403121561234257600080fd5b5035919050565b60006020828403121561235b57600080fd5b8151610b0081611adb565b8082018082111561163757634e487b7160e01b600052601160045260246000fdfea2646970667358221220610443422509d2f9d792c0e09b4987b6b438e1d50610b8924cf8fbe117f7865564736f6c63430008180033";

type NTERC20AssetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NTERC20AssetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NTERC20Asset__factory extends ContractFactory {
  constructor(...args: NTERC20AssetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    args: BaseAssetArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(args, overrides || {});
  }
  override deploy(
    args: BaseAssetArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(args, overrides || {}) as Promise<
      NTERC20Asset & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NTERC20Asset__factory {
    return super.connect(runner) as NTERC20Asset__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NTERC20AssetInterface {
    return new Interface(_abi) as NTERC20AssetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NTERC20Asset {
    return new Contract(address, _abi, runner) as unknown as NTERC20Asset;
  }
}
