/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  NTERC20Asset,
  NTERC20AssetInterface,
  BaseAssetArgsStruct,
} from "../../../../contracts/asset/erc20/NTERC20Asset";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "assetFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "assetRegistry",
            type: "address",
          },
          {
            internalType: "address",
            name: "avatarRegistry",
            type: "address",
          },
          {
            internalType: "address",
            name: "companyRegistry",
            type: "address",
          },
        ],
        internalType: "struct BaseAssetArgs",
        name: "args",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "condition",
        type: "address",
      },
    ],
    name: "AssetConditionAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "condition",
        type: "address",
      },
    ],
    name: "AssetConditionRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "hook",
        type: "address",
      },
    ],
    name: "AssetHookAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "hook",
        type: "address",
      },
    ],
    name: "AssetHookRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "ERC20Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAsset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAsset",
        type: "address",
      },
    ],
    name: "ERC20Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IAssetCondition",
        name: "condition",
        type: "address",
      },
    ],
    name: "addCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAssetHook",
        name: "_hook",
        type: "address",
      },
    ],
    name: "addHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "avatarRegistry",
    outputs: [
      {
        internalType: "contract IAvatarRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "canMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "world",
            type: "address",
          },
          {
            internalType: "address",
            name: "company",
            type: "address",
          },
          {
            internalType: "address",
            name: "experience",
            type: "address",
          },
          {
            internalType: "address",
            name: "avatar",
            type: "address",
          },
        ],
        internalType: "struct AssetCheckArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "canUseAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "world",
            type: "address",
          },
          {
            internalType: "address",
            name: "company",
            type: "address",
          },
          {
            internalType: "address",
            name: "experience",
            type: "address",
          },
          {
            internalType: "address",
            name: "avatar",
            type: "address",
          },
        ],
        internalType: "struct AssetCheckArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "canViewAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "companyRegistry",
    outputs: [
      {
        internalType: "contract ICompanyRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "originChainAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "issuer",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "originChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
        ],
        internalType: "struct ERC20InitData",
        name: "data",
        type: "tuple",
      },
    ],
    name: "encodeInitData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hook",
    outputs: [
      {
        internalType: "contract IAssetHook",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "issuer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "originAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "originChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tgt",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAsset",
        type: "address",
      },
    ],
    name: "upgradeComplete",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610100604052600180553480156200001657600080fd5b506040516200295b3803806200295b833981016040819052620000399162000259565b6001600055805181906001600160a01b0316620000b15760405162461bcd60e51b815260206004820152602b60248201527f4261736541737365743a206173736574466163746f727920697320746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b60208101516001600160a01b0316620001225760405162461bcd60e51b815260206004820152602c60248201527f4261736541737365743a2061737365745265676973747279206973207468652060448201526b7a65726f206164647265737360a01b6064820152608401620000a8565b60408101516001600160a01b0316620001945760405162461bcd60e51b815260206004820152602d60248201527f4261736541737365743a2061766174617252656769737472792069732074686560448201526c207a65726f206164647265737360981b6064820152608401620000a8565b60608101516001600160a01b0316620002075760405162461bcd60e51b815260206004820152602e60248201527f4261736541737365743a20636f6d70616e79526567697374727920697320746860448201526d65207a65726f206164647265737360901b6064820152608401620000a8565b80516001600160a01b039081166080526020820151811660a0526040820151811660c0526060909101511660e05250620002ed565b80516001600160a01b03811681146200025457600080fd5b919050565b6000608082840312156200026c57600080fd5b604051608081016001600160401b03811182821017156200029d57634e487b7160e01b600052604160045260246000fd5b604052620002ab836200023c565b8152620002bb602084016200023c565b6020820152620002ce604084016200023c565b6040820152620002e1606084016200023c565b60608201529392505050565b60805160a05160c05160e0516126116200034a600039600081816104250152610c2701526000818161045f015261173901526000818161037d01526107e00152600081816103fe015281816108580152610b0f01526126116000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80635e7a90051161010f578063a9059cbb116100a2578063c51aba2b11610071578063c51aba2b14610420578063dd62ed3e14610447578063e3d7ad731461045a578063e517fedd1461048157600080fd5b8063a9059cbb146103c5578063b4e75b9b146103d3578063b510391f146103e6578063c3acb4d1146103f957600080fd5b806395d89b41116100de57806395d89b4114610370578063979d7e86146103785780639a9738441461039f5780639e54c0a2146103b257600080fd5b80635e7a90051461032f57806370a08231146103425780637b4e04e8146103555780637f5a7c7b1461036857600080fd5b806323b872dd11610187578063378f17ff11610156578063378f17ff146102f85780633fa47f17146103005780634ddf47d41461031357806354fd4d501461032657600080fd5b806323b872dd146102a557806325394645146102b85780632663d1f7146102cb578063313ce567146102de57600080fd5b80630ac7f561116101c35780630ac7f5611461023557806318160ddd1461024b5780631d1438481461027257806322d349321461029257600080fd5b8063021665b7146101ea57806306fdde03146101f4578063095ea7b314610212575b600080fd5b6101f2610489565b005b6101fc610520565b6040516102099190611d1c565b60405180910390f35b610225610220366004611d57565b6105bb565b6040519015158152602001610209565b61023d610616565b604051908152602001610209565b7f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb86055461023d565b61027a610629565b6040516001600160a01b039091168152602001610209565b6101f26102a0366004611d83565b610645565b6102256102b3366004611da0565b61073b565b6101f26102c6366004611e2a565b610796565b6101f26102d9366004611d83565b61084d565b6102e66109c0565b60405160ff9091168152602001610209565b6101f26109d3565b61022561030e366004611edc565b610a61565b6101f2610321366004611fda565b610b04565b61023d60015481565b6101fc61033d366004612065565b61105f565b61023d610350366004611d83565b611088565b6101f2610363366004611d83565b6110c2565b61027a6111b3565b6101fc6111cf565b61027a7f000000000000000000000000000000000000000000000000000000000000000081565b6101f26103ad36600461213d565b6111e7565b6102256103c036600461213d565b611402565b6102256102b3366004611d57565b6102256103e1366004611edc565b611515565b6101f26103f436600461213d565b611570565b61027a7f000000000000000000000000000000000000000000000000000000000000000081565b61027a7f000000000000000000000000000000000000000000000000000000000000000081565b61023d610455366004612192565b611835565b61027a7f000000000000000000000000000000000000000000000000000000000000000081565b61027a611881565b61049161189f565b600101546001600160a01b031633146104c55760405162461bcd60e51b81526004016104bc906121cb565b60405180910390fd5b60006104cf61189f565b60038101546040519192506001600160a01b03169081907f2df08b6a3a4aed918c51e7ac3bbbe4f82bb09d26fef89a0c23ddc38c1a3c385b90600090a25060030180546001600160a01b0319169055565b606061052a61189f565b600501805461053890612202565b80601f016020809104026020016040519081016040528092919081815260200182805461056490612202565b80156105b15780601f10610586576101008083540402835291602001916105b1565b820191906000526020600020905b81548152906001019060200180831161059457829003601f168201915b5050505050905090565b60405162461bcd60e51b815260206004820152602760248201527f4e54455243323041737365743a20617070726f76616c73206e6f7420616c6c6f6044820152661dd959081e595d60ca1b60648201526000906084016104bc565b600061062061189f565b60040154905090565b600061063361189f565b600101546001600160a01b0316919050565b61064d61189f565b600101546001600160a01b031633146106785760405162461bcd60e51b81526004016104bc906121cb565b600061068261189f565b90506001600160a01b0382166106ee5760405162461bcd60e51b815260206004820152602b60248201527f4261736541737365743a20636f6e646974696f6e2063616e6e6f74206265207a60448201526a65726f206164647265737360a81b60648201526084016104bc565b6003810180546001600160a01b0319166001600160a01b0384169081179091556040517fb17f5e42ddd024b71620166aeff196e5f40a39a3d7fe8082929e768015fbf7c190600090a25050565b60405162461bcd60e51b815260206004820152602760248201527f4e54455243323041737365743a207472616e7366657273206e6f7420616c6c6f6044820152661dd959081e595d60ca1b60648201526000906084016104bc565b61079e61189f565b600101546001600160a01b031633146107c95760405162461bcd60e51b81526004016104bc906121cb565b604051633cbd429360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633cbd429390610817908590859060040161223c565b600060405180830381600087803b15801561083157600080fd5b505af1158015610845573d6000803e3d6000fd5b505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108c55760405162461bcd60e51b815260206004820152601f60248201527f4261736541737365743a206f6e6c7920666163746f727920616c6c6f7765640060448201526064016104bc565b306001600160a01b03821603610945576040805162461bcd60e51b81526020600482015260248101919091527f4e54455243323041737365743a206e6577207570677261646520636f6e74726160448201527f637420616464726573732063616e6e6f74206d61746368206f726967696e616c60648201526084016104bc565b7f1f07e7b49187e1cf67924ca1fa35732211c5bb2c23b6b53ee47453438de7285e80546001600160a01b031981166001600160a01b038481169182178455604080519283525192169182917fe0cdc3a6eaf24c066560b5cb2e50c08f3d82cce0e3d838dc7032ba68790cd52b919081900360200190a2505050565b60006109ca61189f565b5460ff16919050565b6109db61189f565b600101546001600160a01b03163314610a065760405162461bcd60e51b81526004016104bc906121cb565b6000610a1061189f565b60028101546040519192506001600160a01b03169081907f94dff9f830507f1f2b72515aaaaa174f690a73801b6ab87ae6d75e584de177c890600090a25060020180546001600160a01b0319169055565b600080610a6c61189f565b60038101549091506001600160a01b0316610a8a5750600192915050565b60038101546040516377b63b9160e11b81526001600160a01b039091169063ef6c772290610abc90869060040161226b565b602060405180830381865afa158015610ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afd91906122b2565b9392505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b7c5760405162461bcd60e51b815260206004820152601f60248201527f4261736541737365743a206f6e6c7920666163746f727920616c6c6f7765640060448201526064016104bc565b600081806020019051810190610b92919061232f565b60208101519091506001600160a01b0316610c035760405162461bcd60e51b815260206004820152602b60248201527f4e54455243323041737365743a206973737565722063616e6e6f74206265207a60448201526a65726f206164647265737360a81b60648201526084016104bc565b6020810151604051632405672560e21b81526001600160a01b0391821660048201527f0000000000000000000000000000000000000000000000000000000000000000909116906390159c9490602401602060405180830381865afa158015610c70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9491906122b2565b610cf85760405162461bcd60e51b815260206004820152602f60248201527f4e54455243323041737365743a20697373756572206d7573742062652072656760448201526e6973746572656420636f6d70616e7960881b60648201526084016104bc565b80516001600160a01b0316610d755760405162461bcd60e51b815260206004820152603760248201527f4e54455243323041737365743a206f726967696e436861696e4164647265737360448201527f2063616e6e6f74206265207a65726f206164647265737300000000000000000060648201526084016104bc565b60008160a001515111610dd55760405162461bcd60e51b815260206004820152602260248201527f4e54455243323041737365743a206e616d652063616e6e6f7420626520656d70604482015261747960f01b60648201526084016104bc565b60008160c001515111610e365760405162461bcd60e51b8152602060048201526024808201527f4e54455243323041737365743a2073796d626f6c2063616e6e6f7420626520656044820152636d70747960e01b60648201526084016104bc565b6000816060015111610ea85760405162461bcd60e51b815260206004820152603560248201527f4e54455243323041737365743a206f726967696e436861696e4964206d7573746044820152742062652067726561746572207468616e207a65726f60581b60648201526084016104bc565b6000816080015111610f165760405162461bcd60e51b815260206004820152603160248201527f4e54455243323041737365743a206d6178537570706c79206d7573742062652060448201527067726561746572207468616e207a65726f60781b60648201526084016104bc565b80517f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb86088054610100600160a81b0319166101006001600160a01b039384160217905560208201517f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb860980546001600160a01b0319169190921617905560608101517f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb860c5560808101517f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb860490815560a08201517f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb860d906110129082612440565b5060c0820151600a8201906110279082612440565b506000826040015160ff161161103e576012611044565b81604001515b600491909101805460ff191660ff9092169190911790555050565b6060816040516020016110729190612500565b6040516020818303038152906040529050919050565b6001600160a01b031660009081527f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb8606602052604090205490565b6110ca61189f565b600101546001600160a01b031633146110f55760405162461bcd60e51b81526004016104bc906121cb565b60006110ff61189f565b90506001600160a01b0382166111665760405162461bcd60e51b815260206004820152602660248201527f4261736541737365743a20686f6f6b2063616e6e6f74206265207a65726f206160448201526564647265737360d01b60648201526084016104bc565b6002810180546001600160a01b0319166001600160a01b0384169081179091556040517ff716b9f35a5af170228b0c97201cc581ce2ca1703824fd6b78f3583f28f7eedc90600090a25050565b60006111bd61189f565b600201546001600160a01b0316919050565b60606111d961189f565b600601805461053890612202565b6111ef6118c3565b6111f761189f565b600101546001600160a01b031633146112225760405162461bcd60e51b81526004016104bc906121cb565b600061122c61189f565b600201546001600160a01b03169050600061124983850185612584565b90508061125586611088565b10156112c95760405162461bcd60e51b815260206004820152603960248201527f4e6f6e5472616e7366657261626c65455243323041737365743a20696e73756660448201527f66696369656e742062616c616e636520746f207265766f6b650000000000000060648201526084016104bc565b6001600160a01b038216156113cc576040516335661e9560e21b81523060048201526001600160a01b038681166024830152604482018390526000919084169063d5987a54906064016020604051808303816000875af1158015611331573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135591906122b2565b9050806113ca5760405162461bcd60e51b815260206004820152603d60248201527f4e6f6e5472616e7366657261626c65455243323041737365743a206265666f7260448201527f655265766f6b6520686f6f6b2072656a6563746564207265717565737400000060648201526084016104bc565b505b60006113d786611088565b90506113f0868284106113ea57826118ed565b836118ed565b5050506113fd6001600055565b505050565b60007f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb86048161143285850186612584565b90508160000154818360010154611449919061259d565b11156114a15760405162461bcd60e51b815260206004820152602160248201527f4e54455243323041737365743a206d617820737570706c7920657863656564656044820152601960fa1b60648201526084016104bc565b6001600160a01b0386166115095760405162461bcd60e51b815260206004820152602960248201527f4e54455243323041737365743a2063616e6e6f74206d696e7420746f207a65726044820152686f206164647265737360b81b60648201526084016104bc565b50600195945050505050565b60008061152061189f565b60038101549091506001600160a01b031661153e5750600192915050565b600381015460405163eab4ad0360e01b81526001600160a01b039091169063eab4ad0390610abc90869060040161226b565b6115786118c3565b61158061189f565b600101546001600160a01b031633146115ab5760405162461bcd60e51b81526004016104bc906121cb565b6115b6838383611402565b6116025760405162461bcd60e51b815260206004820181905260248201527f4e54455243323041737365743a2063616e6e6f74206d696e7420746f6b656e7360448201526064016104bc565b600061161082840184612584565b9050600061161c61189f565b60028101549091506001600160a01b03161561171a5760028101546040516386b8418760e01b81523060048201526001600160a01b0387811660248301526044820185905260009216906386b84187906064016020604051808303816000875af115801561168e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b291906122b2565b9050806117185760405162461bcd60e51b815260206004820152602e60248201527f4e54455243323041737365743a206265666f72654d696e7420686f6f6b20726560448201526d1a9958dd1959081c995c5d595cdd60921b60648201526084016104bc565b505b604051632b0fe8e760e21b81526001600160a01b0386811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063ac3fa39c90602401602060405180830381865afa158015611780573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a491906122b2565b1561181f576000859050806001600160a01b031663181d939b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181091906122b2565b61181d5761181d86611927565b505b6118298583611af9565b50506113fd6001600055565b6001600160a01b0382811660009081527f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb860760209081526040808320938516835292905220545b92915050565b600061188b61189f565b5461010090046001600160a01b0316919050565b7f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb860890565b6002600054036118e657604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6001600160a01b03821661191757604051634b637e8f60e11b8152600060048201526024016104bc565b61192382600083611b76565b5050565b6000816001600160a01b031663516f279e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198b91906125be565b9050600061199761189f565b90506001600160a01b0382166119f95760405162461bcd60e51b815260206004820152602160248201527f4261736541737365743a2061766174617220686173206e6f206c6f636174696f6044820152603760f91b60648201526084016104bc565b600181015460408051636904c94d60e01b815290516001600160a01b0392831692851691636904c94d9160048083019260209291908290030181865afa158015611a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6b91906125be565b6001600160a01b0316146113fd5760405162461bcd60e51b815260206004820152604960248201527f4261736541737365743a2061766174617220646f6573206e6f7420616c6c6f7760448201527f20617373657473206f757473696465206f66206974732063757272656e7420656064820152687870657269656e636560b81b608482015260a4016104bc565b6001600160a01b038216611b235760405163ec442f0560e01b8152600060048201526024016104bc565b611b2f60008383611b76565b816001600160a01b03167f1f98ee45d72cac8271cfd41cc599153bf1465afc3fc1f0b3e2a97b8f1c4253a982604051611b6a91815260200190565b60405180910390a25050565b7f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb86046001600160a01b038416611bc45781816001016000828254611bb9919061259d565b90915550611c3a9050565b6001600160a01b038416600090815260028201602052604090205482811015611c195760405163391434e360e21b81526001600160a01b038616600482015260248101829052604481018490526064016104bc565b6001600160a01b038516600090815260028301602052604090209083900390555b6001600160a01b038316611c58576001810180548390039055611c79565b6001600160a01b038316600090815260028201602052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611cbe91815260200190565b60405180910390a350505050565b60005b83811015611ce7578181015183820152602001611ccf565b50506000910152565b60008151808452611d08816020860160208601611ccc565b601f01601f19169290920160200192915050565b602081526000610afd6020830184611cf0565b6001600160a01b0381168114611d4457600080fd5b50565b8035611d5281611d2f565b919050565b60008060408385031215611d6a57600080fd5b8235611d7581611d2f565b946020939093013593505050565b600060208284031215611d9557600080fd5b8135610afd81611d2f565b600080600060608486031215611db557600080fd5b8335611dc081611d2f565b92506020840135611dd081611d2f565b929592945050506040919091013590565b60008083601f840112611df357600080fd5b50813567ffffffffffffffff811115611e0b57600080fd5b602083019150836020828501011115611e2357600080fd5b9250929050565b60008060208385031215611e3d57600080fd5b823567ffffffffffffffff811115611e5457600080fd5b611e6085828601611de1565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715611ea557611ea5611e6c565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611ed457611ed4611e6c565b604052919050565b600060a08284031215611eee57600080fd5b60405160a0810181811067ffffffffffffffff82111715611f1157611f11611e6c565b6040528235611f1f81611d2f565b81526020830135611f2f81611d2f565b60208201526040830135611f4281611d2f565b60408201526060830135611f5581611d2f565b60608201526080830135611f6881611d2f565b60808201529392505050565b600067ffffffffffffffff821115611f8e57611f8e611e6c565b50601f01601f191660200190565b6000611faf611faa84611f74565b611eab565b9050828152838383011115611fc357600080fd5b828260208301376000602084830101529392505050565b600060208284031215611fec57600080fd5b813567ffffffffffffffff81111561200357600080fd5b8201601f8101841361201457600080fd5b61202384823560208401611f9c565b949350505050565b60ff81168114611d4457600080fd5b8035611d528161202b565b600082601f83011261205657600080fd5b610afd83833560208501611f9c565b60006020828403121561207757600080fd5b813567ffffffffffffffff8082111561208f57600080fd5b9083019060e082860312156120a357600080fd5b6120ab611e82565b6120b483611d47565b81526120c260208401611d47565b60208201526120d36040840161203a565b6040820152606083013560608201526080830135608082015260a0830135828111156120fe57600080fd5b61210a87828601612045565b60a08301525060c08301358281111561212257600080fd5b61212e87828601612045565b60c08301525095945050505050565b60008060006040848603121561215257600080fd5b833561215d81611d2f565b9250602084013567ffffffffffffffff81111561217957600080fd5b61218586828701611de1565b9497909650939450505050565b600080604083850312156121a557600080fd5b82356121b081611d2f565b915060208301356121c081611d2f565b809150509250929050565b6020808252601e908201527f4261736541737365743a206f6e6c792069737375657220616c6c6f7765640000604082015260600190565b600181811c9082168061221657607f821691505b60208210810361223657634e487b7160e01b600052602260045260246000fd5b50919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b81516001600160a01b039081168252602080840151821690830152604080840151821690830152606080840151821690830152608092830151169181019190915260a00190565b6000602082840312156122c457600080fd5b81518015158114610afd57600080fd5b8051611d5281611d2f565b8051611d528161202b565b600082601f8301126122fb57600080fd5b8151612309611faa82611f74565b81815284602083860101111561231e57600080fd5b612023826020830160208701611ccc565b60006020828403121561234157600080fd5b815167ffffffffffffffff8082111561235957600080fd5b9083019060e0828603121561236d57600080fd5b612375611e82565b61237e836122d4565b815261238c602084016122d4565b602082015261239d604084016122df565b6040820152606083015160608201526080830151608082015260a0830151828111156123c857600080fd5b6123d4878286016122ea565b60a08301525060c0830151828111156123ec57600080fd5b61212e878286016122ea565b601f8211156113fd576000816000526020600020601f850160051c810160208610156124215750805b601f850160051c820191505b818110156108455782815560010161242d565b815167ffffffffffffffff81111561245a5761245a611e6c565b61246e816124688454612202565b846123f8565b602080601f8311600181146124a3576000841561248b5750858301515b600019600386901b1c1916600185901b178555610845565b600085815260208120601f198616915b828110156124d2578886015182559484019460019091019084016124b3565b50858210156124f05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152600060018060a01b038084511660208401528060208501511660408401525060ff604084015116606083015260608301516080830152608083015160a083015260a083015160e060c084015261255e610100840182611cf0565b905060c0840151601f198483030160e085015261257b8282611cf0565b95945050505050565b60006020828403121561259657600080fd5b5035919050565b8082018082111561187b57634e487b7160e01b600052601160045260246000fd5b6000602082840312156125d057600080fd5b8151610afd81611d2f56fea26469706673582212204123a57b2c5b2306ac159c802efc4bbd65c52148881a483578e7a668f9ee65c864736f6c63430008180033";

type NTERC20AssetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NTERC20AssetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NTERC20Asset__factory extends ContractFactory {
  constructor(...args: NTERC20AssetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    args: BaseAssetArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(args, overrides || {});
  }
  override deploy(
    args: BaseAssetArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(args, overrides || {}) as Promise<
      NTERC20Asset & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NTERC20Asset__factory {
    return super.connect(runner) as NTERC20Asset__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NTERC20AssetInterface {
    return new Interface(_abi) as NTERC20AssetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NTERC20Asset {
    return new Contract(address, _abi, runner) as unknown as NTERC20Asset;
  }
}
