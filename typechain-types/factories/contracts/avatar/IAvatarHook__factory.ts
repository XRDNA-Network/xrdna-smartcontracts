/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IAvatarHook,
  IAvatarHookInterface,
} from "../../../contracts/avatar/IAvatarHook";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "avatar",
            type: "address",
          },
          {
            internalType: "address",
            name: "destination",
            type: "address",
          },
        ],
        internalType: "struct HookAvatarJumpRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "beforeJump",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "avatar",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "onReceiveERC721",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IAvatarHook__factory {
  static readonly abi = _abi;
  static createInterface(): IAvatarHookInterface {
    return new Interface(_abi) as IAvatarHookInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IAvatarHook {
    return new Contract(address, _abi, runner) as unknown as IAvatarHook;
  }
}
