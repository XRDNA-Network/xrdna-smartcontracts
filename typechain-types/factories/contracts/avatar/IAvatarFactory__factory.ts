/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IAvatarFactory,
  IAvatarFactoryInterface,
} from "../../../contracts/avatar/IAvatarFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "company",
        type: "address",
      },
      {
        internalType: "address",
        name: "defaultExperience",
        type: "address",
      },
      {
        internalType: "string",
        name: "username",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
    ],
    name: "createAvatar",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "avatar",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
    ],
    name: "upgradeAvatar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IAvatarFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IAvatarFactoryInterface {
    return new Interface(_abi) as IAvatarFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IAvatarFactory {
    return new Contract(address, _abi, runner) as unknown as IAvatarFactory;
  }
}
