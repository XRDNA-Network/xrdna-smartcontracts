/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Company,
  CompanyInterface,
  CompanyConstructorArgsStruct,
} from "../../../../contracts/company/Company.sol/Company";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "companyFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "companyRegistry",
            type: "address",
          },
          {
            internalType: "contract IExperienceRegistry",
            name: "experienceRegistry",
            type: "address",
          },
          {
            internalType: "contract IAssetRegistry",
            name: "assetRegistry",
            type: "address",
          },
          {
            internalType: "contract IAvatarRegistry",
            name: "avatarRegistry",
            type: "address",
          },
        ],
        internalType: "struct CompanyConstructorArgs",
        name: "args",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessControlBadConfirmation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "neededRole",
        type: "bytes32",
      },
    ],
    name: "AccessControlUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOrTokenId",
        type: "uint256",
      },
    ],
    name: "AssetMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOrTokenId",
        type: "uint256",
      },
    ],
    name: "AssetRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "CompanyHookRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "hook",
        type: "address",
      },
    ],
    name: "CompanyHookSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldVersion",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nextVersion",
        type: "address",
      },
    ],
    name: "CompanyUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "experience",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "portalId",
        type: "uint256",
      },
    ],
    name: "ExperienceAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "SignerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "SignerRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SIGNER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "contract IAssetHook",
        name: "aHook",
        type: "address",
      },
    ],
    name: "addAssetHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "initData",
            type: "bytes",
          },
        ],
        internalType: "struct AddExperienceArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "addExperience",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "experience",
        type: "address",
      },
      {
        internalType: "address",
        name: "condition",
        type: "address",
      },
    ],
    name: "addExperienceCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "addSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetRegistry",
    outputs: [
      {
        internalType: "contract IAssetRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "avatarRegistry",
    outputs: [
      {
        internalType: "contract IAvatarRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "canMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "experience",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "changeExperiencePortalFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "companyFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "companyRegistry",
    outputs: [
      {
        internalType: "contract ICompanyRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "experienceRegistry",
    outputs: [
      {
        internalType: "contract IExperienceRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hook",
    outputs: [
      {
        internalType: "contract ICompanyHook",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "world",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "x",
                type: "string",
              },
              {
                internalType: "string",
                name: "y",
                type: "string",
              },
              {
                internalType: "string",
                name: "z",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "t",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "p",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "p_sub",
                type: "uint256",
              },
            ],
            internalType: "struct VectorAddress",
            name: "vector",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "initData",
            type: "bytes",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct CompanyInitArgs",
        name: "request",
        type: "tuple",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "isSigner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "removeAssetHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "experience",
        type: "address",
      },
    ],
    name: "removeExperienceCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "removeSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "callerConfirmation",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOrTokenId",
        type: "uint256",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICompanyHook",
        name: "_hook",
        type: "address",
      },
    ],
    name: "setHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nextVersion",
        type: "address",
      },
    ],
    name: "upgradeComplete",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upgraded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vectorAddress",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "x",
            type: "string",
          },
          {
            internalType: "string",
            name: "y",
            type: "string",
          },
          {
            internalType: "string",
            name: "z",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "t",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "p",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "p_sub",
            type: "uint256",
          },
        ],
        internalType: "struct VectorAddress",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101206040523480156200001257600080fd5b5060405162002e8838038062002e888339810160408190526200003591620002ba565b600160005580516001600160a01b0316620000a55760405162461bcd60e51b815260206004820152602560248201527f436f6d70616e793a20636f6d70616e79466163746f72792063616e6e6f742062604482015264065203078360dc1b60648201526084015b60405180910390fd5b60208101516001600160a01b0316620001105760405162461bcd60e51b815260206004820152602660248201527f436f6d70616e793a20636f6d70616e7952656769737472792063616e6e6f742060448201526506265203078360d41b60648201526084016200009c565b60408101516001600160a01b03166200017e5760405162461bcd60e51b815260206004820152602960248201527f436f6d70616e793a20657870657269656e636552656769737472792063616e6e60448201526806f74206265203078360bc1b60648201526084016200009c565b60608101516001600160a01b0316620001e65760405162461bcd60e51b8152602060048201526024808201527f436f6d70616e793a20617373657452656769737472792063616e6e6f742062656044820152630203078360e41b60648201526084016200009c565b60808101516001600160a01b0316620002505760405162461bcd60e51b815260206004820152602560248201527f436f6d70616e793a2061766174617252656769737472792063616e6e6f742062604482015264065203078360dc1b60648201526084016200009c565b80516001600160a01b0390811660809081526020830151821660a0526040830151821660c0526060830151821660e05290910151166101005262000365565b6001600160a01b0381168114620002a557600080fd5b50565b8051620002b5816200028f565b919050565b600060a08284031215620002cd57600080fd5b60405160a081016001600160401b0381118282101715620002fe57634e487b7160e01b600052604160045260246000fd5b60405282516200030e816200028f565b8152602083015162000320816200028f565b60208201526200033360408401620002a8565b60408201526200034660608401620002a8565b60608201526200035960808401620002a8565b60808201529392505050565b60805160a05160c05160e05161010051612aa6620003e26000396000818161072901526118900152600081816105bc01526117780152600081816105680152610c8b01526000818161066101528181610dc201528181610e130152610e920152600081816106f5015281816113b401526114330152612aa66000f3fe60806040526004361061021e5760003560e01c806357433ea611610123578063a1ebf35d116100ab578063cd806c8b1161006f578063cd806c8b146106a3578063d547741f146106c3578063dc1c44be146106e3578063e3d7ad7314610717578063eb12d61e1461074b57600080fd5b8063a1ebf35d146105fe578063a217fddf14610620578063c28de2cd14610635578063c51aba2b1461064f578063c6c3bbe61461068357600080fd5b80638da5cb5b116100f25780638da5cb5b146105315780638f09a6be1461055657806391d148541461058a578063979d7e86146105aa5780639e29186d146105de57600080fd5b806357433ea6146104b1578063624a7dc7146104d15780637df73e27146104f15780637f5a7c7b1461051157600080fd5b80632663d1f7116101a657806330b67baa1161017557806330b67baa1461040457806336568abe1461043c578063378f17ff1461045c5780633dfd3873146104715780635466ddd51461049157600080fd5b80632663d1f7146103825780632e1a7d4d146103a25780632f2ff15d146103c25780632fcbab9a146103e257600080fd5b80631187b627116101ed5780631187b627146102c35780631961f05d146102e3578063243546a614610303578063248a9ca314610323578063253946451461036257600080fd5b806301ffc9a71461022a5780630346f5f51461025f57806306fdde03146102815780630e316ab7146102a357600080fd5b3661022557005b600080fd5b34801561023657600080fd5b5061024a61024536600461221c565b61076b565b60405190151581526020015b60405180910390f35b34801561026b57600080fd5b5061027f61027a36600461226b565b6107a2565b005b34801561028d57600080fd5b50610296610810565b60405161025691906122dd565b3480156102af57600080fd5b5061027f6102be3660046122f0565b61089e565b3480156102cf57600080fd5b5061027f6102de36600461230d565b610955565b3480156102ef57600080fd5b5061027f6102fe3660046122f0565b6109c0565b34801561030f57600080fd5b5061027f61031e366004612435565b610a22565b34801561032f57600080fd5b5061035461033e3660046124dc565b6000908152600160208190526040909120015490565b604051908152602001610256565b34801561036e57600080fd5b5061027f61037d3660046124f5565b610d70565b34801561038e57600080fd5b5061027f61039d3660046122f0565b610e11565b3480156103ae57600080fd5b5061027f6103bd3660046124dc565b610ff4565b3480156103ce57600080fd5b5061027f6103dd366004612532565b611092565b3480156103ee57600080fd5b506103f76110be565b60405161025691906125ca565b34801561041057600080fd5b50600354610424906001600160a01b031681565b6040516001600160a01b039091168152602001610256565b34801561044857600080fd5b5061027f610457366004612532565b6112dd565b34801561046857600080fd5b5061027f611310565b34801561047d57600080fd5b5061027f61048c3660046122f0565b61132e565b34801561049d57600080fd5b5061027f6104ac36600461268f565b6113b2565b3480156104bd57600080fd5b5061027f6104cc36600461230d565b611707565b3480156104dd57600080fd5b5061024a6104ec366004612766565b611743565b3480156104fd57600080fd5b5061024a61050c3660046122f0565b611a5a565b34801561051d57600080fd5b50600454610424906001600160a01b031681565b34801561053d57600080fd5b506002546104249061010090046001600160a01b031681565b34801561056257600080fd5b506104247f000000000000000000000000000000000000000000000000000000000000000081565b34801561059657600080fd5b5061024a6105a5366004612532565b611a70565b3480156105b657600080fd5b506104247f000000000000000000000000000000000000000000000000000000000000000081565b3480156105ea57600080fd5b5061027f6105f93660046122f0565b611a9b565b34801561060a57600080fd5b50610354600080516020612a5183398151915281565b34801561062c57600080fd5b50610354600081565b34801561064157600080fd5b5060025461024a9060ff1681565b34801561065b57600080fd5b506104247f000000000000000000000000000000000000000000000000000000000000000081565b34801561068f57600080fd5b5061027f61069e366004612766565b611ae6565b3480156106af57600080fd5b5061027f6106be366004612766565b611df5565b3480156106cf57600080fd5b5061027f6106de366004612532565b611fce565b3480156106ef57600080fd5b506104247f000000000000000000000000000000000000000000000000000000000000000081565b34801561072357600080fd5b506104247f000000000000000000000000000000000000000000000000000000000000000081565b34801561075757600080fd5b5061027f6107663660046122f0565b611ff4565b60006001600160e01b03198216637965db0b60e01b148061079c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006107ad816120c9565b6040516383c3426360e01b81526004810183905283906001600160a01b038216906383c34263906024015b600060405180830381600087803b1580156107f257600080fd5b505af1158015610806573d6000803e3d6000fd5b5050505050505050565b600b805461081d906127a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610849906127a7565b80156108965780601f1061086b57610100808354040283529160200191610896565b820191906000526020600020905b81548152906001019060200180831161087957829003601f168201915b505050505081565b60006108a9816120c9565b6001600160a01b0382166109045760405162461bcd60e51b815260206004820152601d60248201527f436f6d70616e793a207369676e65722063616e6e6f742062652030783000000060448201526064015b60405180910390fd5b61091c600080516020612a51833981519152836120d3565b506040516001600160a01b038316907f3525e22824a8a7df2c9a6029941c824cf95b6447f1e13d5128fd3826d35afe8b90600090a25050565b6000610960816120c9565b604051630f69c09d60e31b81526001600160a01b038381166004830152841690637b4e04e890602401600060405180830381600087803b1580156109a357600080fd5b505af11580156109b7573d6000803e3d6000fd5b50505050505050565b60006109cb816120c9565b816001600160a01b031663378f17ff6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a0657600080fd5b505af1158015610a1a573d6000803e3d6000fd5b505050505050565b600080516020612a51833981519152610a3a816120c9565b60025460ff1615610a5d5760405162461bcd60e51b81526004016108fb906127e1565b610a65612148565b600c60008154610a7490612824565b9190508190555060006040518060c0016040528060056000018054610a98906127a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac4906127a7565b8015610b115780601f10610ae657610100808354040283529160200191610b11565b820191906000526020600020905b815481529060010190602001808311610af457829003601f168201915b5050505050815260200160056001018054610b2b906127a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610b57906127a7565b8015610ba45780601f10610b7957610100808354040283529160200191610ba4565b820191906000526020600020905b815481529060010190602001808311610b8757829003601f168201915b5050505050815260200160056002018054610bbe906127a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610bea906127a7565b8015610c375780601f10610c0c57610100808354040283529160200191610c37565b820191906000526020600020905b815481529060010190602001808311610c1a57829003601f168201915b5050505050815260200160056003015481526020016005600401548152602001600c5481525090506000604051806060016040528083815260200185602001518152602001856000015181525090506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631305f017846040518263ffffffff1660e01b8152600401610cd5919061284b565b60408051808303816000875af1158015610cf3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1791906128ac565b91509150816001600160a01b03167f564792a0259ee41a56519990d80509a8057848327265f2075bcaac108651eab982604051610d5691815260200190565b60405180910390a250505050610d6c6001600055565b5050565b6000610d7b816120c9565b60025460ff1615610d9e5760405162461bcd60e51b81526004016108fb906127e1565b6002805460ff1916600117905560405163d449cf2560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d449cf2590610df79085906004016122dd565b600060405180830381600087803b158015610a0657600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610e875760405162461bcd60e51b815260206004820152601960248201527f436f6d70616e793a207265676973747279206e6f74207365740000000000000060448201526064016108fb565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f0b5760405162461bcd60e51b815260206004820152602360248201527f436f6d70616e793a2063616c6c6572206973206e6f742074686520726567697360448201526274727960e81b60648201526084016108fb565b610f13612148565b478015610f52576040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610f50573d6000803e3d6000fd5b505b600c5460405163312c4a9f60e11b815260048101919091526001600160a01b03831690636258953e90602401600060405180830381600087803b158015610f9857600080fd5b505af1158015610fac573d6000803e3d6000fd5b50506040516001600160a01b03851692503091507f62e097eae9ab3bdbcbf8876a75515aa178198bfb2b0e9a90a7308bceb2efa6e690600090a350610ff16001600055565b50565b6000610fff816120c9565b4782111561104f5760405162461bcd60e51b815260206004820152601d60248201527f436f6d70616e793a20696e73756666696369656e742062616c616e636500000060448201526064016108fb565b6002546040516101009091046001600160a01b0316906108fc8415029084906000818181858888f1935050505015801561108d573d6000803e3d6000fd5b505050565b600082815260016020819052604090912001546110ae816120c9565b6110b88383612172565b50505050565b6110f76040518060c001604052806060815260200160608152602001606081526020016000815260200160008152602001600081525090565b60056040518060c0016040529081600082018054611114906127a7565b80601f0160208091040260200160405190810160405280929190818152602001828054611140906127a7565b801561118d5780601f106111625761010080835404028352916020019161118d565b820191906000526020600020905b81548152906001019060200180831161117057829003601f168201915b505050505081526020016001820180546111a6906127a7565b80601f01602080910402602001604051908101604052809291908181526020018280546111d2906127a7565b801561121f5780601f106111f45761010080835404028352916020019161121f565b820191906000526020600020905b81548152906001019060200180831161120257829003601f168201915b50505050508152602001600282018054611238906127a7565b80601f0160208091040260200160405190810160405280929190818152602001828054611264906127a7565b80156112b15780601f10611286576101008083540402835291602001916112b1565b820191906000526020600020905b81548152906001019060200180831161129457829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481525050905090565b6001600160a01b03811633146113065760405163334bd91960e11b815260040160405180910390fd5b61108d82826120d3565b600061131b816120c9565b50600480546001600160a01b0319169055565b6000611339816120c9565b6001600160a01b03821661138f5760405162461bcd60e51b815260206004820152601b60248201527f436f6d70616e793a20686f6f6b2063616e6e6f7420626520307830000000000060448201526064016108fb565b50600480546001600160a01b0319166001600160a01b0392909216919091179055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166114285760405162461bcd60e51b815260206004820152601860248201527f436f6d70616e793a20666163746f7279206e6f7420736574000000000000000060448201526064016108fb565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146114ab5760405162461bcd60e51b815260206004820152602260248201527f436f6d70616e793a2063616c6c6572206973206e6f742074686520666163746f604482015261727960f01b60648201526084016108fb565b60025461010090046001600160a01b0316156115095760405162461bcd60e51b815260206004820152601c60248201527f436f6d70616e793a20616c726561647920696e697469616c697a65640000000060448201526064016108fb565b80516001600160a01b03166115605760405162461bcd60e51b815260206004820152601c60248201527f436f6d70616e793a206f776e65722063616e6e6f74206265203078300000000060448201526064016108fb565b6000816080015151116115b55760405162461bcd60e51b815260206004820152601d60248201527f436f6d70616e793a206e616d652063616e6e6f7420626520656d70747900000060448201526064016108fb565b60208101516001600160a01b031661160f5760405162461bcd60e51b815260206004820152601c60248201527f436f6d70616e793a20776f726c642063616e6e6f74206265203078300000000060448201526064016108fb565b805160028054610100600160a81b0319166101006001600160a01b03938416021790556020820151600380546001600160a01b031916919092161790556040810151805160059081906116629082612922565b50602082015160018201906116779082612922565b506040820151600282019061168c9082612922565b5060608201516003820155608080830151600483015560a090920151600590910155810151600b906116be9082612922565b506002546116dc9060009061010090046001600160a01b0316612172565b50600254610d6c90600080516020612a518339815191529061010090046001600160a01b0316612172565b6000611712816120c9565b6040516337eff0db60e11b81526001600160a01b038381166004830152849190821690636fdfe1b6906024016107d8565b60025460009060ff161561175957506000611a53565b6040516315bd8ac360e31b81526001600160a01b0385811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063adec561890602401602060405180830381865afa1580156117bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e391906129e2565b6117ef57506000611a53565b306001600160a01b0316846001600160a01b0316631d1438486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611837573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185b9190612a04565b6001600160a01b03161461187157506000611a53565b604051632b0fe8e760e21b81526001600160a01b0384811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063ac3fa39c90602401602060405180830381865afa1580156118d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118fb91906129e2565b61190757506001611a53565b6000836001600160a01b031663516f279e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611947573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196b9190612a04565b90506001600160a01b0381166119d95760405162461bcd60e51b815260206004820152602d60248201527f436f6d70616e793a20617661746172206c6f636174696f6e206973206e6f742060448201526c616e20657870657269656e636560981b60648201526084016108fb565b306001600160a01b0316816001600160a01b0316636904c94d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a459190612a04565b6001600160a01b0316149150505b9392505050565b600061079c600080516020612a51833981519152835b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6000611aa6816120c9565b6000829050806001600160a01b03166358779dcf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156109a357600080fd5b600080516020612a51833981519152611afe816120c9565b60025460ff1615611b215760405162461bcd60e51b81526004016108fb906127e1565b611b29612148565b611b34848484611743565b611b805760405162461bcd60e51b815260206004820152601a60248201527f436f6d70616e793a2063616e6e6f74206d696e7420617373657400000000000060448201526064016108fb565b6000846001600160a01b0316633fe3347a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be49190612a21565b6002811115611bf557611bf5612a3a565b90506001816002811115611c0b57611c0b612a3a565b03611cc4576040516340c10f1960e01b81526001600160a01b038581166004830152602482018590528616906340c10f1990604401600060405180830381600087803b158015611c5a57600080fd5b505af1158015611c6e573d6000803e3d6000fd5b50505050836001600160a01b0316856001600160a01b03167f9f8f31349c47dec18bab6fd70c3f360209248439f904d89f5bd13bbc42b0680785604051611cb791815260200190565b60405180910390a3611dea565b6002816002811115611cd857611cd8612a3a565b03611da2576040516335313c2160e11b81526001600160a01b03858116600483015260009190871690636a627842906024016020604051808303816000875af1158015611d29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4d9190612a21565b9050846001600160a01b0316866001600160a01b03167f9f8f31349c47dec18bab6fd70c3f360209248439f904d89f5bd13bbc42b0680783604051611d9491815260200190565b60405180910390a350611dea565b60405162461bcd60e51b815260206004820152601f60248201527f436f6d70616e793a20756e737570706f7274656420617373657420747970650060448201526064016108fb565b506110b86001600055565b600080516020612a51833981519152611e0d816120c9565b60025460ff1615611e305760405162461bcd60e51b81526004016108fb906127e1565b611e38612148565b6000846001600160a01b0316633fe3347a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e9c9190612a21565b6002811115611ead57611ead612a3a565b90506001816002811115611ec357611ec3612a3a565b03611f305760405163eac449d960e01b81526001600160a01b0385811660048301526024820185905286169063eac449d9906044015b600060405180830381600087803b158015611f1357600080fd5b505af1158015611f27573d6000803e3d6000fd5b50505050611f76565b6002816002811115611f4457611f44612a3a565b03611da2576040516320c5429b60e01b8152600481018490526001600160a01b038616906320c5429b90602401611ef9565b836001600160a01b0316856001600160a01b03167f5561832f82bd612a3ed1e1014b38299755bc4acc641249d9108bd59c1ade68e385604051611fbb91815260200190565b60405180910390a3506110b86001600055565b60008281526001602081905260409091200154611fea816120c9565b6110b883836120d3565b6000611fff816120c9565b60025460ff16156120225760405162461bcd60e51b81526004016108fb906127e1565b6001600160a01b0382166120785760405162461bcd60e51b815260206004820152601d60248201527f436f6d70616e793a207369676e65722063616e6e6f742062652030783000000060448201526064016108fb565b612090600080516020612a5183398151915283612172565b506040516001600160a01b038316907f47d1c22a25bb3a5d4e481b9b1e6944c2eade3181a0a20b495ed61d35b5323f2490600090a25050565b610ff181336121e3565b60006120df8383611a70565b156121405760008381526001602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a450600161079c565b50600061079c565b60026000540361216b57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b600061217e8383611a70565b6121405760008381526001602081815260408084206001600160a01b0387168086529252808420805460ff19169093179092559051339286917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a450600161079c565b6121ed8282611a70565b610d6c5760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016108fb565b60006020828403121561222e57600080fd5b81356001600160e01b031981168114611a5357600080fd5b6001600160a01b0381168114610ff157600080fd5b803561226681612246565b919050565b6000806040838503121561227e57600080fd5b823561228981612246565b946020939093013593505050565b6000815180845260005b818110156122bd576020818501810151868301820152016122a1565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611a536020830184612297565b60006020828403121561230257600080fd5b8135611a5381612246565b6000806040838503121561232057600080fd5b823561232b81612246565b9150602083013561233b81612246565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561237f5761237f612346565b60405290565b60405160a0810167ffffffffffffffff8111828210171561237f5761237f612346565b600082601f8301126123b957600080fd5b813567ffffffffffffffff808211156123d4576123d4612346565b604051601f8301601f19908116603f011681019082821181831017156123fc576123fc612346565b8160405283815286602085880101111561241557600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561244757600080fd5b813567ffffffffffffffff8082111561245f57600080fd5b908301906040828603121561247357600080fd5b60405160408101818110838211171561248e5761248e612346565b6040528235828111156124a057600080fd5b6124ac878286016123a8565b8252506020830135828111156124c157600080fd5b6124cd878286016123a8565b60208301525095945050505050565b6000602082840312156124ee57600080fd5b5035919050565b60006020828403121561250757600080fd5b813567ffffffffffffffff81111561251e57600080fd5b61252a848285016123a8565b949350505050565b6000806040838503121561254557600080fd5b82359150602083013561233b81612246565b6000815160c0845261256c60c0850182612297565b9050602083015184820360208601526125858282612297565b9150506040830151848203604086015261259f8282612297565b915050606083015160608501526080830151608085015260a083015160a08501528091505092915050565b602081526000611a536020830184612557565b600060c082840312156125ef57600080fd5b6125f761235c565b9050813567ffffffffffffffff8082111561261157600080fd5b61261d858386016123a8565b8352602084013591508082111561263357600080fd5b61263f858386016123a8565b6020840152604084013591508082111561265857600080fd5b50612665848285016123a8565b604083015250606082013560608201526080820135608082015260a082013560a082015292915050565b6000602082840312156126a157600080fd5b813567ffffffffffffffff808211156126b957600080fd5b9083019060a082860312156126cd57600080fd5b6126d5612385565b6126de8361225b565b81526126ec6020840161225b565b602082015260408301358281111561270357600080fd5b61270f878286016125dd565b60408301525060608301358281111561272757600080fd5b612733878286016123a8565b60608301525060808301358281111561274b57600080fd5b612757878286016123a8565b60808301525095945050505050565b60008060006060848603121561277b57600080fd5b833561278681612246565b9250602084013561279681612246565b929592945050506040919091013590565b600181811c908216806127bb57607f821691505b6020821081036127db57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526023908201527f436f6d70616e793a20636f6e747261637420686173206265656e20757067726160408201526219195960ea1b606082015260800190565b60006001820161284457634e487b7160e01b600052601160045260246000fd5b5060010190565b6020815260008251606060208401526128676080840182612557565b90506020840151601f19808584030160408601526128858383612297565b92506040860151915080858403016060860152506128a38282612297565b95945050505050565b600080604083850312156128bf57600080fd5b82516128ca81612246565b6020939093015192949293505050565b601f82111561108d576000816000526020600020601f850160051c810160208610156129035750805b601f850160051c820191505b81811015610a1a5782815560010161290f565b815167ffffffffffffffff81111561293c5761293c612346565b6129508161294a84546127a7565b846128da565b602080601f831160018114612985576000841561296d5750858301515b600019600386901b1c1916600185901b178555610a1a565b600085815260208120601f198616915b828110156129b457888601518255948401946001909101908401612995565b50858210156129d25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156129f457600080fd5b81518015158114611a5357600080fd5b600060208284031215612a1657600080fd5b8151611a5381612246565b600060208284031215612a3357600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fdfee2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70a2646970667358221220b0405a21fa8ef0bfbc2b13e128bcc81995accc3d12038da0be932acb3ebf781664736f6c63430008180033";

type CompanyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompanyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Company__factory extends ContractFactory {
  constructor(...args: CompanyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    args: CompanyConstructorArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(args, overrides || {});
  }
  override deploy(
    args: CompanyConstructorArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(args, overrides || {}) as Promise<
      Company & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Company__factory {
    return super.connect(runner) as Company__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompanyInterface {
    return new Interface(_abi) as CompanyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Company {
    return new Contract(address, _abi, runner) as unknown as Company;
  }
}
