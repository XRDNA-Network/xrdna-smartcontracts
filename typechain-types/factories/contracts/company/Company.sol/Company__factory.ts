/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Company,
  CompanyInterface,
  CompanyConstructorArgsStruct,
} from "../../../../contracts/company/Company.sol/Company";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "companyFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "companyRegistry",
            type: "address",
          },
          {
            internalType: "contract IExperienceRegistry",
            name: "experienceRegistry",
            type: "address",
          },
          {
            internalType: "contract IMultiAssetRegistry",
            name: "multiAssetRegistry",
            type: "address",
          },
          {
            internalType: "contract IAvatarRegistry",
            name: "avatarRegistry",
            type: "address",
          },
        ],
        internalType: "struct CompanyConstructorArgs",
        name: "args",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOrTokenId",
        type: "uint256",
      },
    ],
    name: "AssetMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOrTokenId",
        type: "uint256",
      },
    ],
    name: "AssetRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "CompanyHookRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "hook",
        type: "address",
      },
    ],
    name: "CompanyHookSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldVersion",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nextVersion",
        type: "address",
      },
    ],
    name: "CompanyUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "experience",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "portalId",
        type: "uint256",
      },
    ],
    name: "ExperienceAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ReceivedFunds",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "SignerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "SignerRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "condition",
        type: "address",
      },
    ],
    name: "addAssetCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "contract IAssetHook",
        name: "aHook",
        type: "address",
      },
    ],
    name: "addAssetHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "initData",
            type: "bytes",
          },
        ],
        internalType: "struct AddExperienceArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "addExperience",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "experience",
        type: "address",
      },
      {
        internalType: "address",
        name: "condition",
        type: "address",
      },
    ],
    name: "addExperienceCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "signers",
        type: "address[]",
      },
    ],
    name: "addSigners",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetRegistry",
    outputs: [
      {
        internalType: "contract IMultiAssetRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "avatarRegistry",
    outputs: [
      {
        internalType: "contract IAvatarRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "extra",
        type: "bytes",
      },
    ],
    name: "canMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "experience",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "changeExperiencePortalFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "companyFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "companyRegistry",
    outputs: [
      {
        internalType: "contract ICompanyRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "avatar",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "portalId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "agreedFee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "avatarOwnerSignature",
            type: "bytes",
          },
        ],
        internalType: "struct DelegatedAvatarJumpRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "delegateJumpForAvatar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "initData",
            type: "bytes",
          },
        ],
        internalType: "struct AddExperienceArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "encodeExperienceArgs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "experienceRegistry",
    outputs: [
      {
        internalType: "contract IExperienceRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "world",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "x",
                type: "string",
              },
              {
                internalType: "string",
                name: "y",
                type: "string",
              },
              {
                internalType: "string",
                name: "z",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "t",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "p",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "p_sub",
                type: "uint256",
              },
            ],
            internalType: "struct VectorAddress",
            name: "vector",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "initData",
            type: "bytes",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct CompanyInitArgs",
        name: "request",
        type: "tuple",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "isSigner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "removeAssetCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "removeAssetHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "experience",
        type: "address",
      },
    ],
    name: "removeExperienceCondition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "signers",
        type: "address[]",
      },
    ],
    name: "removeSigners",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICompanyHook",
        name: "_hook",
        type: "address",
      },
    ],
    name: "setHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nextVersion",
        type: "address",
      },
    ],
    name: "upgradeComplete",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vectorAddress",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "x",
            type: "string",
          },
          {
            internalType: "string",
            name: "y",
            type: "string",
          },
          {
            internalType: "string",
            name: "z",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "t",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "p",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "p_sub",
            type: "uint256",
          },
        ],
        internalType: "struct VectorAddress",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101206040523480156200001257600080fd5b5060405162003300380380620033008339810160408190526200003591620002ba565b600160005580516001600160a01b0316620000a55760405162461bcd60e51b815260206004820152602560248201527f436f6d70616e793a20636f6d70616e79466163746f72792063616e6e6f742062604482015264065203078360dc1b60648201526084015b60405180910390fd5b60208101516001600160a01b0316620001105760405162461bcd60e51b815260206004820152602660248201527f436f6d70616e793a20636f6d70616e7952656769737472792063616e6e6f742060448201526506265203078360d41b60648201526084016200009c565b60408101516001600160a01b03166200017e5760405162461bcd60e51b815260206004820152602960248201527f436f6d70616e793a20657870657269656e636552656769737472792063616e6e60448201526806f74206265203078360bc1b60648201526084016200009c565b60608101516001600160a01b0316620001e65760405162461bcd60e51b8152602060048201526024808201527f436f6d70616e793a20617373657452656769737472792063616e6e6f742062656044820152630203078360e41b60648201526084016200009c565b60808101516001600160a01b0316620002505760405162461bcd60e51b815260206004820152602560248201527f436f6d70616e793a2061766174617252656769737472792063616e6e6f742062604482015264065203078360dc1b60648201526084016200009c565b80516001600160a01b0390811660809081526020830151821660a0526040830151821660c0526060830151821660e05290910151166101005262000365565b6001600160a01b0381168114620002a557600080fd5b50565b8051620002b5816200028f565b919050565b600060a08284031215620002cd57600080fd5b60405160a081016001600160401b0381118282101715620002fe57634e487b7160e01b600052604160045260246000fd5b60405282516200030e816200028f565b8152602083015162000320816200028f565b60208201526200033360408401620002a8565b60408201526200034660608401620002a8565b60608201526200035960808401620002a8565b60808201529392505050565b60805160a05160c05160e05161010051612f17620003e960003960008181610648015261156901526000818161058c015281816113c901526118160152600081816105580152610ce70152600081816105e00152610e2501526000818161061401528181610e7601528181610ef001528181611ae30152611b5d0152612f176000f3fe6080604052600436106101e75760003560e01c80635466ddd5116101025780638f09a6be11610095578063dc1c44be11610064578063dc1c44be14610602578063e3d7ad7314610636578063e8906a2d1461066a578063f1ddecf91461068a57600080fd5b80638f09a6be14610546578063979d7e861461057a5780639e29186d146105ae578063c51aba2b146105ce57600080fd5b80637d4daec5116100d15780637d4daec5146104bb5780637df73e27146104db5780638d361e43146104fb5780638da5cb5b1461051b57600080fd5b80635466ddd51461043857806354fd4d501461045857806357433ea61461047b5780636330347a1461049b57600080fd5b806329f2691d1161017a578063378f17ff11610149578063378f17ff146103b357806337b4eb06146103c857806338c8a97b146103f85780633dfd38731461041857600080fd5b806329f2691d146103005780632e1a7d4d146103205780632fcbab9a1461034057806330b67baa1461036257600080fd5b80631961f05d116101b65780631961f05d14610280578063243546a6146102a057806325394645146102c05780632663d1f7146102e057600080fd5b80630346f5f5146101f357806306fdde03146102155780631187b6271461024057806316c49b111461026057600080fd5b366101ee57005b600080fd5b3480156101ff57600080fd5b5061021361020e366004612455565b6106aa565b005b34801561022157600080fd5b5061022a610757565b60405161023791906124c7565b60405180910390f35b34801561024c57600080fd5b5061021361025b3660046124da565b61081a565b34801561026c57600080fd5b5061021361027b366004612513565b6108bc565b34801561028c57600080fd5b5061021361029b36600461254e565b6109a3565b3480156102ac57600080fd5b506102136102bb36600461265a565b610a3b565b3480156102cc57600080fd5b506102136102db366004612701565b610dcd565b3480156102ec57600080fd5b506102136102fb36600461254e565b610e74565b34801561030c57600080fd5b5061021361031b36600461254e565b610f89565b34801561032c57600080fd5b5061021361033b366004612736565b611005565b34801561034c57600080fd5b506103556110e4565b60405161023791906127c2565b34801561036e57600080fd5b507f6373b2650f68a30b6fdd87e3caf4df754a3a8f8ef4b09bbd1bb4ff21f356aa2d546001600160a01b03165b6040516001600160a01b039091168152602001610237565b3480156103bf57600080fd5b50610213611334565b3480156103d457600080fd5b506103e86103e33660046127d5565b6113a7565b6040519015158152602001610237565b34801561040457600080fd5b506102136104133660046127d5565b6117ae565b34801561042457600080fd5b5061021361043336600461254e565b611a08565b34801561044457600080fd5b50610213610453366004612919565b611ae1565b34801561046457600080fd5b5061046d600181565b604051908152602001610237565b34801561048757600080fd5b506102136104963660046124da565b611dfc565b3480156104a757600080fd5b506102136104b63660046124da565b611e6e565b3480156104c757600080fd5b5061022a6104d636600461265a565b611edd565b3480156104e757600080fd5b506103e86104f636600461254e565b611f06565b34801561050757600080fd5b506102136105163660046129f0565b611f33565b34801561052757600080fd5b50600080516020612e82833981519152546001600160a01b031661039b565b34801561055257600080fd5b5061039b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561058657600080fd5b5061039b7f000000000000000000000000000000000000000000000000000000000000000081565b3480156105ba57600080fd5b506102136105c936600461254e565b611f7e565b3480156105da57600080fd5b5061039b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561060e57600080fd5b5061039b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561064257600080fd5b5061039b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561067657600080fd5b506102136106853660046129f0565b611fff565b34801561069657600080fd5b506102136106a53660046127d5565b61204a565b60006106b4612157565b90506106cf81600080516020612ec28339815191523361217b565b6106f45760405162461bcd60e51b81526004016106eb90612a65565b60405180910390fd5b6040516383c3426360e01b81526004810183905283906001600160a01b038216906383c34263906024015b600060405180830381600087803b15801561073957600080fd5b505af115801561074d573d6000803e3d6000fd5b5050505050505050565b7f6373b2650f68a30b6fdd87e3caf4df754a3a8f8ef4b09bbd1bb4ff21f356aa358054606091600080516020612e828339815191529161079690612ab0565b80601f01602080910402602001604051908101604052809291908181526020018280546107c290612ab0565b801561080f5780601f106107e45761010080835404028352916020019161080f565b820191906000526020600020905b8154815290600101906020018083116107f257829003601f168201915b505050505091505090565b6000610824612157565b905061083f81600080516020612ec28339815191523361217b565b61085b5760405162461bcd60e51b81526004016106eb90612a65565b604051630f69c09d60e31b81526001600160a01b038381166004830152841690637b4e04e8906024015b600060405180830381600087803b15801561089f57600080fd5b505af11580156108b3573d6000803e3d6000fd5b50505050505050565b60006108c6612157565b90506108e181600080516020612ea28339815191523361217b565b6108fd5760405162461bcd60e51b81526004016106eb90612aea565b600061090c602084018461254e565b9050806001600160a01b0316637dc759e56040518060600160405280866020013581526020018660400135815260200186806060019061094c9190612b36565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152506040516001600160e01b031960e084901b1681526108859190600401612b84565b60006109ad612157565b90506109c881600080516020612ec28339815191523361217b565b6109e45760405162461bcd60e51b81526004016106eb90612a65565b816001600160a01b031663378f17ff6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a1f57600080fd5b505af1158015610a33573d6000803e3d6000fd5b505050505050565b6000610a45612157565b9050610a6081600080516020612ea28339815191523361217b565b610a7c5760405162461bcd60e51b81526004016106eb90612aea565b610a846121a8565b7f6373b2650f68a30b6fdd87e3caf4df754a3a8f8ef4b09bbd1bb4ff21f356aa368054600080516020612e828339815191529190600090610ac490612bb3565b9190508190555060006040518060c00160405280836003016000018054610aea90612ab0565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1690612ab0565b8015610b635780601f10610b3857610100808354040283529160200191610b63565b820191906000526020600020905b815481529060010190602001808311610b4657829003601f168201915b50505050508152602001836003016001018054610b7f90612ab0565b80601f0160208091040260200160405190810160405280929190818152602001828054610bab90612ab0565b8015610bf85780601f10610bcd57610100808354040283529160200191610bf8565b820191906000526020600020905b815481529060010190602001808311610bdb57829003601f168201915b50505050508152602001836003016002018054610c1490612ab0565b80601f0160208091040260200160405190810160405280929190818152602001828054610c4090612ab0565b8015610c8d5780601f10610c6257610100808354040283529160200191610c8d565b820191906000526020600020905b815481529060010190602001808311610c7057829003601f168201915b50505050508152602001836003016003015481526020018360030160040154815260200183600a015481525090506000604051806060016040528083815260200186602001518152602001866000015181525090506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631305f017846040518263ffffffff1660e01b8152600401610d319190612bda565b60408051808303816000875af1158015610d4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d739190612c3b565b91509150816001600160a01b03167f564792a0259ee41a56519990d80509a8057848327265f2075bcaac108651eab982604051610db291815260200190565b60405180910390a25050505050610dc96001600055565b5050565b6000610dd7612157565b9050610df281600080516020612ec28339815191523361217b565b610e0e5760405162461bcd60e51b81526004016106eb90612a65565b60405163d449cf2560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d449cf2590610e5a9085906004016124c7565b600060405180830381600087803b158015610a1f57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610ee55760405162461bcd60e51b815260206004820152601860248201527710dbdb5c185b9e4e88199858dd1bdc9e481b9bdd081cd95d60421b60448201526064016106eb565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f2d5760405162461bcd60e51b81526004016106eb90612c69565b6000610f37612157565b80546001600160a01b038481166001600160a01b031983168117845560405193945091169182907f62e097eae9ab3bdbcbf8876a75515aa178198bfb2b0e9a90a7308bceb2efa6e690600090a3505050565b6000610f93612157565b9050610fae81600080516020612ec28339815191523361217b565b610fca5760405162461bcd60e51b81526004016106eb90612a65565b816001600160a01b031663021665b76040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a1f57600080fd5b600061100f612157565b905061102a81600080516020612ec28339815191523361217b565b6110465760405162461bcd60e51b81526004016106eb90612a65565b478211156110965760405162461bcd60e51b815260206004820152601d60248201527f436f6d70616e793a20696e73756666696369656e742062616c616e636500000060448201526064016106eb565b600080516020612e8283398151915280546040516001600160a01b03909116906108fc8515029085906000818181858888f193505050501580156110de573d6000803e3d6000fd5b50505050565b61111d6040518060c001604052806060815260200160608152602001606081526020016000815260200160008152602001600081525090565b6040805160c081019091527f6373b2650f68a30b6fdd87e3caf4df754a3a8f8ef4b09bbd1bb4ff21f356aa2f8054600080516020612e828339815191529291908290829061116a90612ab0565b80601f016020809104026020016040519081016040528092919081815260200182805461119690612ab0565b80156111e35780601f106111b8576101008083540402835291602001916111e3565b820191906000526020600020905b8154815290600101906020018083116111c657829003601f168201915b505050505081526020016001820180546111fc90612ab0565b80601f016020809104026020016040519081016040528092919081815260200182805461122890612ab0565b80156112755780601f1061124a57610100808354040283529160200191611275565b820191906000526020600020905b81548152906001019060200180831161125857829003601f168201915b5050505050815260200160028201805461128e90612ab0565b80601f01602080910402602001604051908101604052809291908181526020018280546112ba90612ab0565b80156113075780601f106112dc57610100808354040283529160200191611307565b820191906000526020600020905b8154815290600101906020018083116112ea57829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152505091505090565b600061133e612157565b905061135981600080516020612ec28339815191523361217b565b6113755760405162461bcd60e51b81526004016106eb90612a65565b507f6373b2650f68a30b6fdd87e3caf4df754a3a8f8ef4b09bbd1bb4ff21f356aa2e80546001600160a01b0319169055565b6040516315bd8ac360e31b81526001600160a01b0385811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063adec561890602401602060405180830381865afa158015611412573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114369190612cab565b611442575060006117a6565b6000859050306001600160a01b0316816001600160a01b0316631d1438486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561148f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b39190612ccd565b6001600160a01b0316146114cb5760009150506117a6565b604051634f2a605160e11b81526001600160a01b03821690639e54c0a2906114fb90889088908890600401612cea565b602060405180830381865afa158015611518573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153c9190612cab565b61154a5760009150506117a6565b604051632b0fe8e760e21b81526001600160a01b0386811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063ac3fa39c90602401602060405180830381865afa1580156115b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d49190612cab565b6115e25760019150506117a6565b6000859050806001600160a01b031663181d939b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611625573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116499190612cab565b61179f576000816001600160a01b031663516f279e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561168d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b19190612ccd565b90506001600160a01b03811661171f5760405162461bcd60e51b815260206004820152602d60248201527f436f6d70616e793a20617661746172206c6f636174696f6e206973206e6f742060448201526c616e20657870657269656e636560981b60648201526084016106eb565b306001600160a01b0316816001600160a01b0316636904c94d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611767573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178b9190612ccd565b6001600160a01b03161493505050506117a6565b6001925050505b949350505050565b60006117b8612157565b90506117d381600080516020612ea28339815191523361217b565b6117ef5760405162461bcd60e51b81526004016106eb90612aea565b6117f76121a8565b6040516315bd8ac360e31b81526001600160a01b0386811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063adec561890602401602060405180830381865afa15801561185d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118819190612cab565b6118cd5760405162461bcd60e51b815260206004820152601d60248201527f436f6d70616e793a206173736574206e6f74207265676973746572656400000060448201526064016106eb565b6000859050306001600160a01b0316816001600160a01b0316631d1438486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561191a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193e9190612ccd565b6001600160a01b0316146119945760405162461bcd60e51b815260206004820152601c60248201527f436f6d70616e793a206e6f7420697373756572206f662061737365740000000060448201526064016106eb565b6040516326a5ce1160e21b81526001600160a01b03821690639a973844906119c490889088908890600401612cea565b600060405180830381600087803b1580156119de57600080fd5b505af11580156119f2573d6000803e3d6000fd5b5050505050611a016001600055565b5050505050565b6000611a12612157565b9050611a2d81600080516020612ec28339815191523361217b565b611a495760405162461bcd60e51b81526004016106eb90612a65565b6001600160a01b038216611a9f5760405162461bcd60e51b815260206004820152601b60248201527f436f6d70616e793a20686f6f6b2063616e6e6f7420626520307830000000000060448201526064016106eb565b507f6373b2650f68a30b6fdd87e3caf4df754a3a8f8ef4b09bbd1bb4ff21f356aa2e80546001600160a01b0319166001600160a01b0392909216919091179055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611b525760405162461bcd60e51b815260206004820152601860248201527710dbdb5c185b9e4e88199858dd1bdc9e481b9bdd081cd95d60421b60448201526064016106eb565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611b9a5760405162461bcd60e51b81526004016106eb90612c69565b600080516020612e8283398151915280546001600160a01b031615611c015760405162461bcd60e51b815260206004820152601c60248201527f436f6d70616e793a20616c726561647920696e697469616c697a65640000000060448201526064016106eb565b81516001600160a01b0316611c585760405162461bcd60e51b815260206004820152601c60248201527f436f6d70616e793a206f776e65722063616e6e6f74206265203078300000000060448201526064016106eb565b600082608001515111611cad5760405162461bcd60e51b815260206004820152601d60248201527f436f6d70616e793a206e616d652063616e6e6f7420626520656d70747900000060448201526064016106eb565b60208201516001600160a01b0316611d075760405162461bcd60e51b815260206004820152601c60248201527f436f6d70616e793a20776f726c642063616e6e6f74206265203078300000000060448201526064016106eb565b815181546001600160a01b039182166001600160a01b031991821617835560208401516001840180549190931691161790556040820151805160038301908190611d519082612d72565b5060208201516001820190611d669082612d72565b5060408201516002820190611d7b9082612d72565b5060608201516003820155608080830151600483015560a0909201516005909101558201516009820190611daf9082612d72565b506000611dba612157565b8351909150611dda908290600080516020612ec2833981519152906121d2565b8251611df7908290600080516020612ea2833981519152906121d2565b505050565b6000611e06612157565b9050611e2181600080516020612ec28339815191523361217b565b611e3d5760405162461bcd60e51b81526004016106eb90612a65565b6040516337eff0db60e11b81526001600160a01b038381166004830152849190821690636fdfe1b69060240161071f565b6000611e78612157565b9050611e9381600080516020612ec28339815191523361217b565b611eaf5760405162461bcd60e51b81526004016106eb90612a65565b604051631169a49960e11b81526001600160a01b0383811660048301528416906322d3493290602401610885565b606081604051602001611ef09190612e32565b6040516020818303038152906040529050919050565b600080611f11612157565b9050611f2c81600080516020612ea28339815191528561217b565b9392505050565b6000611f3d612157565b9050611f5881600080516020612ec28339815191523361217b565b611f745760405162461bcd60e51b81526004016106eb90612a65565b611df78383612205565b6000611f88612157565b9050611fa381600080516020612ec28339815191523361217b565b611fbf5760405162461bcd60e51b81526004016106eb90612a65565b6000829050806001600160a01b03166358779dcf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561089f57600080fd5b6000612009612157565b905061202481600080516020612ec28339815191523361217b565b6120405760405162461bcd60e51b81526004016106eb90612a65565b611df783836122e8565b6000612054612157565b905061206f81600080516020612ea28339815191523361217b565b61208b5760405162461bcd60e51b81526004016106eb90612aea565b6120936121a8565b61209f858585856113a7565b6120eb5760405162461bcd60e51b815260206004820152601a60248201527f436f6d70616e793a2063616e6e6f74206d696e7420617373657400000000000060448201526064016106eb565b60405163b510391f60e01b81526001600160a01b0386169063b510391f9061211b90879087908790600401612cea565b600060405180830381600087803b15801561213557600080fd5b505af1158015612149573d6000803e3d6000fd5b50505050611a016001600055565b7f1f07e7b49187e1cf67924ca1fa35732211c5bb2c23b6b53ee47453438de7285e90565b6000918252600192909201602090815260408083206001600160a01b039094168352929052205460ff1690565b6002600054036121cb57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b60009182526001928301602090815260408084206001600160a01b0390931684529190529020805460ff19169091179055565b600061220f612157565b905060005b828110156110de57612284600080516020612ea283398151915285858481811061224057612240612e6b565b9050602002016020810190612255919061254e565b600091825260018501602090815260408084206001600160a01b0390931684529190529020805460ff19169055565b83838281811061229657612296612e6b565b90506020020160208101906122ab919061254e565b6001600160a01b03167f3525e22824a8a7df2c9a6029941c824cf95b6447f1e13d5128fd3826d35afe8b60405160405180910390a2600101612214565b60006122f2612157565b905060005b828110156110de57600084848381811061231357612313612e6b565b9050602002016020810190612328919061254e565b6001600160a01b0316036123885760405162461bcd60e51b815260206004820152602160248201527f4261736550726f78793a207369676e6572206973207a65726f206164647265736044820152607360f81b60648201526084016106eb565b6123c9600080516020612ea28339815191528585848181106123ac576123ac612e6b565b90506020020160208101906123c1919061254e565b8491906121d2565b8383828181106123db576123db612e6b565b90506020020160208101906123f0919061254e565b6001600160a01b03167f47d1c22a25bb3a5d4e481b9b1e6944c2eade3181a0a20b495ed61d35b5323f2460405160405180910390a26001016122f7565b6001600160a01b038116811461244257600080fd5b50565b80356124508161242d565b919050565b6000806040838503121561246857600080fd5b82356124738161242d565b946020939093013593505050565b6000815180845260005b818110156124a75760208185018101518683018201520161248b565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611f2c6020830184612481565b600080604083850312156124ed57600080fd5b82356124f88161242d565b915060208301356125088161242d565b809150509250929050565b60006020828403121561252557600080fd5b813567ffffffffffffffff81111561253c57600080fd5b820160808185031215611f2c57600080fd5b60006020828403121561256057600080fd5b8135611f2c8161242d565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156125a4576125a461256b565b60405290565b60405160a0810167ffffffffffffffff811182821017156125a4576125a461256b565b600082601f8301126125de57600080fd5b813567ffffffffffffffff808211156125f9576125f961256b565b604051601f8301601f19908116603f011681019082821181831017156126215761262161256b565b8160405283815286602085880101111561263a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561266c57600080fd5b813567ffffffffffffffff8082111561268457600080fd5b908301906040828603121561269857600080fd5b6040516040810181811083821117156126b3576126b361256b565b6040528235828111156126c557600080fd5b6126d1878286016125cd565b8252506020830135828111156126e657600080fd5b6126f2878286016125cd565b60208301525095945050505050565b60006020828403121561271357600080fd5b813567ffffffffffffffff81111561272a57600080fd5b6117a6848285016125cd565b60006020828403121561274857600080fd5b5035919050565b6000815160c0845261276460c0850182612481565b90506020830151848203602086015261277d8282612481565b915050604083015184820360408601526127978282612481565b915050606083015160608501526080830151608085015260a083015160a08501528091505092915050565b602081526000611f2c602083018461274f565b600080600080606085870312156127eb57600080fd5b84356127f68161242d565b935060208501356128068161242d565b9250604085013567ffffffffffffffff8082111561282357600080fd5b818701915087601f83011261283757600080fd5b81358181111561284657600080fd5b88602082850101111561285857600080fd5b95989497505060200194505050565b600060c0828403121561287957600080fd5b612881612581565b9050813567ffffffffffffffff8082111561289b57600080fd5b6128a7858386016125cd565b835260208401359150808211156128bd57600080fd5b6128c9858386016125cd565b602084015260408401359150808211156128e257600080fd5b506128ef848285016125cd565b604083015250606082013560608201526080820135608082015260a082013560a082015292915050565b60006020828403121561292b57600080fd5b813567ffffffffffffffff8082111561294357600080fd5b9083019060a0828603121561295757600080fd5b61295f6125aa565b61296883612445565b815261297660208401612445565b602082015260408301358281111561298d57600080fd5b61299987828601612867565b6040830152506060830135828111156129b157600080fd5b6129bd878286016125cd565b6060830152506080830135828111156129d557600080fd5b6129e1878286016125cd565b60808301525095945050505050565b60008060208385031215612a0357600080fd5b823567ffffffffffffffff80821115612a1b57600080fd5b818501915085601f830112612a2f57600080fd5b813581811115612a3e57600080fd5b8660208260051b8501011115612a5357600080fd5b60209290920196919550909350505050565b6020808252602b908201527f426173654163636573733a2063616c6c657220646f6573206e6f74206861766560408201526a2061646d696e20726f6c6560a81b606082015260800190565b600181811c90821680612ac457607f821691505b602082108103612ae457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602c908201527f426173654163636573733a2063616c6c657220646f6573206e6f74206861766560408201526b207369676e657220726f6c6560a01b606082015260800190565b6000808335601e19843603018112612b4d57600080fd5b83018035915067ffffffffffffffff821115612b6857600080fd5b602001915036819003821315612b7d57600080fd5b9250929050565b602081528151602082015260208201516040820152600060408301516060808401526117a66080840182612481565b600060018201612bd357634e487b7160e01b600052601160045260246000fd5b5060010190565b602081526000825160606020840152612bf6608084018261274f565b90506020840151601f1980858403016040860152612c148383612481565b9250604086015191508085840301606086015250612c328282612481565b95945050505050565b60008060408385031215612c4e57600080fd5b8251612c598161242d565b6020939093015192949293505050565b60208082526022908201527f436f6d70616e793a2063616c6c6572206973206e6f742074686520666163746f604082015261727960f01b606082015260800190565b600060208284031215612cbd57600080fd5b81518015158114611f2c57600080fd5b600060208284031215612cdf57600080fd5b8151611f2c8161242d565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b601f821115611df7576000816000526020600020601f850160051c81016020861015612d535750805b601f850160051c820191505b81811015610a3357828155600101612d5f565b815167ffffffffffffffff811115612d8c57612d8c61256b565b612da081612d9a8454612ab0565b84612d2a565b602080601f831160018114612dd55760008415612dbd5750858301515b600019600386901b1c1916600185901b178555610a33565b600085815260208120601f198616915b82811015612e0457888601518255948401946001909101908401612de5565b5085821015612e225787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b602081526000825160406020840152612e4e6060840182612481565b90506020840151601f19848303016040850152612c328282612481565b634e487b7160e01b600052603260045260246000fdfe6373b2650f68a30b6fdd87e3caf4df754a3a8f8ef4b09bbd1bb4ff21f356aa2ce2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a2646970667358221220ca9ba0792c614a36c885701ef408109cf29939013987888bf3995c02fc4b8cd064736f6c63430008180033";

type CompanyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompanyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Company__factory extends ContractFactory {
  constructor(...args: CompanyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    args: CompanyConstructorArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(args, overrides || {});
  }
  override deploy(
    args: CompanyConstructorArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(args, overrides || {}) as Promise<
      Company & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Company__factory {
    return super.connect(runner) as Company__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompanyInterface {
    return new Interface(_abi) as CompanyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Company {
    return new Contract(address, _abi, runner) as unknown as Company;
  }
}
