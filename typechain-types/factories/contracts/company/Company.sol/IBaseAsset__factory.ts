/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IBaseAsset,
  IBaseAssetInterface,
} from "../../../../contracts/company/Company.sol/IBaseAsset";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAssetHook",
        name: "hook",
        type: "address",
      },
    ],
    name: "addHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "issuer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IBaseAsset__factory {
  static readonly abi = _abi;
  static createInterface(): IBaseAssetInterface {
    return new Interface(_abi) as IBaseAssetInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IBaseAsset {
    return new Contract(address, _abi, runner) as unknown as IBaseAsset;
  }
}
