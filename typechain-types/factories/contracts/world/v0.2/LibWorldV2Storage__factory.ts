/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  LibWorldV2Storage,
  LibWorldV2StorageInterface,
} from "../../../../contracts/world/v0.2/LibWorldV2Storage";

const _abi = [
  {
    inputs: [],
    name: "WorldStorageSlot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a6610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c80638b5ffcd2146038575b600080fd5b605e7f56d7bc8c87dcf17af82d688c532aeaaf98988789f376198bffdb298b88a9593181565b60405190815260200160405180910390f3fea26469706673582212206a9c2a2559e4f2aafb796a43e7554ff4d16b862938e65e7849208ddfca2359fe64736f6c63430008180033";

type LibWorldV2StorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibWorldV2StorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibWorldV2Storage__factory extends ContractFactory {
  constructor(...args: LibWorldV2StorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LibWorldV2Storage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LibWorldV2Storage__factory {
    return super.connect(runner) as LibWorldV2Storage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibWorldV2StorageInterface {
    return new Interface(_abi) as LibWorldV2StorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LibWorldV2Storage {
    return new Contract(address, _abi, runner) as unknown as LibWorldV2Storage;
  }
}
