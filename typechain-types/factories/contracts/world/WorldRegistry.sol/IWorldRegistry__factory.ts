/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IWorldRegistry,
  IWorldRegistryInterface,
} from "../../../../contracts/world/WorldRegistry.sol/IWorldRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "auth",
        type: "address",
      },
    ],
    name: "isVectorAddressAuthority",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    name: "isWorld",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "registrarId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "tokensToOwner",
        type: "bool",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "registrarId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "oldWorld",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
    ],
    name: "upgradeWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IWorldRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IWorldRegistryInterface {
    return new Interface(_abi) as IWorldRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IWorldRegistry {
    return new Contract(address, _abi, runner) as unknown as IWorldRegistry;
  }
}
