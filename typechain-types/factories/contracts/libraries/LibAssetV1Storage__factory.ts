/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LibAssetV1Storage,
  LibAssetV1StorageInterface,
} from "../../../contracts/libraries/LibAssetV1Storage";

const _abi = [
  {
    inputs: [],
    name: "ERC20_STORAGE_SLOT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERC712_STORAGE_SLOT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60d6610039600b82828239805160001a60731461002c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c8063310caa69146042578063cd49bb7d14607a575b600080fd5b60687fe4601683e66aea7671ff73b360b1d51806ae4f53b8823a6b0aac4436f7c181e781565b60405190815260200160405180910390f35b60687f176cbabf2c0dbfb763886e1a47867828030f47836ae8a29efa61d706d1eb86048156fea26469706673582212206521fbd3d01248e70267e77f5b1b4c30670f68f7a233baf083d634f2587b22d064736f6c63430008180033";

type LibAssetV1StorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibAssetV1StorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibAssetV1Storage__factory extends ContractFactory {
  constructor(...args: LibAssetV1StorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LibAssetV1Storage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LibAssetV1Storage__factory {
    return super.connect(runner) as LibAssetV1Storage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibAssetV1StorageInterface {
    return new Interface(_abi) as LibAssetV1StorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LibAssetV1Storage {
    return new Contract(address, _abi, runner) as unknown as LibAssetV1Storage;
  }
}
