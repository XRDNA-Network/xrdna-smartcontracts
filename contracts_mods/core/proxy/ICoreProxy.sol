// SPDX-License-Identifier: MIT
// Compatible with OpenZeppelin Contracts ^5.0.0
pragma solidity ^0.8.24;

import {ModuleVersion} from '../../modules/IModule.sol';

/**
 * Core proxy is used for upgradeable app components that are not generated by a cloning or registration process.
 * Registries and factories are examples of this use case where the registry's underlying storage needs to 
 * remain consistent while its implementation logic may change.
 */
interface ICoreProxy {

    event ProxyImplementationChanged(address indexed newImpl, ModuleVersion version);

    /**
     * @dev Set the implementation of the proxy. This can only be called by an admin access role.
     */
    function setImplementation(address _newImplementation) external;

    /**
     * @dev Get the version of the implementation.
     */
    function implementationVersion() external view returns (ModuleVersion memory);
}